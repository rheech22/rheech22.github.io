{"version":3,"file":"component---src-pages-search-tsx-546bcaa4f0c814ff5d3b.js","mappings":"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","sources":["webpack://gatsby-starter-blog-github-theme/./src/hooks/useFilteredPosts.ts","webpack://gatsby-starter-blog-github-theme/./src/components/NoContent.tsx","webpack://gatsby-starter-blog-github-theme/./src/containers/SearchResult.tsx","webpack://gatsby-starter-blog-github-theme/./src/pages/search.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useContext, useDispatch } from '../store/context';\n\ninterface Params {\n  series?: string;\n  searchFilter?: string;\n  searchKeyword?: string;\n  tag?: string;\n}\n\nconst useFilteredPosts = ({ series, searchFilter, searchKeyword, tag }: Params) => {\n  const dispatch = useDispatch();\n\n  const { posts } = useContext();\n\n  const [ filteredPosts, setFilteredPosts ] = useState(posts);\n\n  const getPosts = () => {\n    if (searchKeyword) {\n      return posts\n        .filter(({ node: { frontmatter, html } }) => {\n          const hasTitle = frontmatter?.title?.toLowerCase()\n            .includes(searchKeyword.toLowerCase());\n          const hasContent = html?.toLowerCase()\n            .includes(searchKeyword.toLowerCase());\n\n          if (searchFilter === 'title') return hasTitle;\n          if (searchFilter === 'content') return hasContent;\n\n          return (hasTitle || hasContent);\n        });\n    }\n\n    if (tag) {\n      dispatch({ type: 'setCurrentTag', payload: { tag: tag.toLowerCase() } });\n\n      return posts\n        .filter(({ node: { frontmatter } }) => {\n          return frontmatter?.tags?.some(t => t?.toLowerCase() === tag.toLowerCase());\n        });\n    }\n\n    if (series) {\n      dispatch({ type: 'setCurrentSeries', payload: { series } });\n\n      return posts\n        .filter(({ node: { frontmatter } }) => frontmatter?.series === series);\n    }\n\n    return posts;\n  };\n\n  useEffect(() => {\n    const filteredPosts = getPosts();\n\n    setFilteredPosts(filteredPosts);\n  }, [ posts, tag, series, searchKeyword, searchFilter ]);\n\n  return filteredPosts;\n};\n\nexport default useFilteredPosts;\n","const NoContent = ({ prefix } : {prefix: string}) => {\n  return (\n    <p>{prefix} 없습니다.</p>\n  );\n};\n\nexport default NoContent;\n","import styled from 'styled-components';\nimport { previews } from '../styles/modules';\n\nimport useFilteredPosts from '../hooks/useFilteredPosts';\nimport useLoadMore from '../hooks/useLoadMore';\n\nimport PostPreview from '../components/PostPreview';\nimport NoContent from '../components/NoContent';\nimport LoadMore from '../components/LoadMore';\nimport ScrollToTop from '../components/ScrollToTop';\n\nimport { SearchPageProps } from '../pages/search';\n\nconst SearchResult = ({ locationState }: {locationState: SearchPageProps['location']['state']}) => {\n  const filteredPosts = useFilteredPosts({\n    tag: locationState?.tag,\n    series: locationState?.series,\n    searchFilter: locationState?.searchFilter,\n    searchKeyword: locationState?.searchKeyword,\n  });\n\n  const { offset, loadMore } = useLoadMore(filteredPosts);\n\n  return (\n    <Container>\n      {filteredPosts.length === 0\n        ? <NoContent prefix=\"검색 결과가\"/>\n        : filteredPosts\n          .slice(0, offset)\n          .map(({ node: {\n            id,\n            excerpt,\n            frontmatter: {\n              path,\n              date,\n              title,\n              tags,\n            },\n          } }) =>\n            <PostPreview\n              key={id}\n              path={path}\n              date={date}\n              title={title}\n              tags={tags ?? []}\n              excerpt={excerpt}\n            />\n          )}\n      <LoadMore load={loadMore}/>\n      <ScrollToTop />\n    </Container>\n  );\n};\n\nexport default SearchResult;\n\nconst Container = styled.ul`\n  ${previews}\n`;\n","import { PageProps } from 'gatsby';\n\nimport SearchResult from '../containers/SearchResult';\n\nimport SidebarProvider from '../components/SidebarProvider';\nimport SEO from '../components/SEO';\n\nexport type SearchPageProps = PageProps<object, object, Record<string, string>>;\n\nexport default ({ location }: SearchPageProps) => (\n  <SidebarProvider>\n    <SearchResult locationState = {location.state}/>\n  </SidebarProvider>\n);\n\nexport const Head = () => (\n  <SEO subTitle=\"검색\" />\n);\n"],"names":["series","searchFilter","searchKeyword","tag","dispatch","useDispatch","posts","useContext","useState","filteredPosts","setFilteredPosts","useEffect","filter","node","frontmatter","html","hasTitle","title","_frontmatter$title","toLowerCase","includes","hasContent","type","payload","tags","_frontmatter$tags","some","t","prefix","_jsxs","locationState","useFilteredPosts","useLoadMore","offset","loadMore","Container","length","_jsx","NoContent","slice","map","id","excerpt","path","date","PostPreview","LoadMore","load","ScrollToTop","styled","previews","location","SidebarProvider","children","SearchResult","state","Head","SEO","subTitle"],"sourceRoot":""}