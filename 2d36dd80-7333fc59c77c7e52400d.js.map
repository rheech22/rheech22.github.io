{"version":3,"file":"2d36dd80-7333fc59c77c7e52400d.js","mappings":"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","sources":["webpack://gatsby-starter-blog-github-theme/./node_modules/three/build/three.core.js"],"sourcesContent":["/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '172';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst RGBDepthPacking = 3202;\nconst RGDepthPacking = 3203;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction probeAsync( gl, sync, interval ) {\n\n\treturn new Promise( function ( resolve, reject ) {\n\n\t\tfunction probe() {\n\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\n\n\t\t\t\tcase gl.WAIT_FAILED:\n\t\t\t\t\treject();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\n\t\t\t\t\tsetTimeout( probe, interval );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tresolve();\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetTimeout( probe, interval );\n\n\t} );\n\n}\n\nfunction toNormalizedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\n\t// Convert [-1, 1] to [0, 1] projection matrix\n\tm[ 2 ] = 0.5 * m[ 2 ] + 0.5 * m[ 3 ];\n\tm[ 6 ] = 0.5 * m[ 6 ] + 0.5 * m[ 7 ];\n\tm[ 10 ] = 0.5 * m[ 10 ] + 0.5 * m[ 11 ];\n\tm[ 14 ] = 0.5 * m[ 14 ] + 0.5 * m[ 15 ];\n\n}\n\nfunction toReversedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\tconst isPerspectiveMatrix = m[ 11 ] === - 1;\n\n\t// Reverse [0, 1] projection matrix\n\tif ( isPerspectiveMatrix ) {\n\n\t\tm[ 10 ] = - m[ 10 ] - 1;\n\t\tm[ 14 ] = - m[ 14 ];\n\n\t} else {\n\n\t\tm[ 10 ] = - m[ 10 ];\n\t\tm[ 14 ] = - m[ 14 ] + 1;\n\n\t}\n\n}\n\nconst LINEAR_REC709_TO_XYZ = /*@__PURE__*/ new Matrix3().set(\n\t0.4123908, 0.3575843, 0.1804808,\n\t0.2126390, 0.7151687, 0.0721923,\n\t0.0193308, 0.1191948, 0.9505322\n);\n\nconst XYZ_TO_LINEAR_REC709 = /*@__PURE__*/ new Matrix3().set(\n\t3.2409699, - 1.5373832, - 0.4986108,\n\t- 0.9692436, 1.8759675, 0.0415551,\n\t0.0556301, - 0.2039770, 1.0569715\n);\n\nfunction createColorManagement() {\n\n\tconst ColorManagement = {\n\n\t\tenabled: true,\n\n\t\tworkingColorSpace: LinearSRGBColorSpace,\n\n\t\t/**\n\t\t * Implementations of supported color spaces.\n\t\t *\n\t\t * Required:\n\t\t *\t- primaries: chromaticity coordinates [ rx ry gx gy bx by ]\n\t\t *\t- whitePoint: reference white [ x y ]\n\t\t *\t- transfer: transfer function (pre-defined)\n\t\t *\t- toXYZ: Matrix3 RGB to XYZ transform\n\t\t *\t- fromXYZ: Matrix3 XYZ to RGB transform\n\t\t *\t- luminanceCoefficients: RGB luminance coefficients\n\t\t *\n\t\t * Optional:\n\t\t *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace }\n\t\t *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }\n\t\t *\n\t\t * Reference:\n\t\t * - https://www.russellcottrell.com/photo/matrixCalculator.htm\n\t\t */\n\t\tspaces: {},\n\n\t\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\t\treturn color;\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = SRGBToLinear( color.r );\n\t\t\t\tcolor.g = SRGBToLinear( color.g );\n\t\t\t\tcolor.b = SRGBToLinear( color.b );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].primaries !== this.spaces[ targetColorSpace ].primaries ) {\n\n\t\t\t\tcolor.applyMatrix3( this.spaces[ sourceColorSpace ].toXYZ );\n\t\t\t\tcolor.applyMatrix3( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ targetColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = LinearToSRGB( color.r );\n\t\t\t\tcolor.g = LinearToSRGB( color.g );\n\t\t\t\tcolor.b = LinearToSRGB( color.b );\n\n\t\t\t}\n\n\t\t\treturn color;\n\n\t\t},\n\n\t\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t\t},\n\n\t\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t\t},\n\n\t\tgetPrimaries: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].primaries;\n\n\t\t},\n\n\t\tgetTransfer: function ( colorSpace ) {\n\n\t\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\t\treturn this.spaces[ colorSpace ].transfer;\n\n\t\t},\n\n\t\tgetLuminanceCoefficients: function ( target, colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn target.fromArray( this.spaces[ colorSpace ].luminanceCoefficients );\n\n\t\t},\n\n\t\tdefine: function ( colorSpaces ) {\n\n\t\t\tObject.assign( this.spaces, colorSpaces );\n\n\t\t},\n\n\t\t// Internal APIs\n\n\t\t_getMatrix: function ( targetMatrix, sourceColorSpace, targetColorSpace ) {\n\n\t\t\treturn targetMatrix\n\t\t\t\t.copy( this.spaces[ sourceColorSpace ].toXYZ )\n\t\t\t\t.multiply( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t},\n\n\t\t_getDrawingBufferColorSpace: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].outputColorSpaceConfig.drawingBufferColorSpace;\n\n\t\t},\n\n\t\t_getUnpackColorSpace: function ( colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].workingColorSpaceConfig.unpackColorSpace;\n\n\t\t}\n\n\t};\n\n\t/******************************************************************************\n\t * sRGB definitions\n\t */\n\n\tconst REC709_PRIMARIES = [ 0.640, 0.330, 0.300, 0.600, 0.150, 0.060 ];\n\tconst REC709_LUMINANCE_COEFFICIENTS = [ 0.2126, 0.7152, 0.0722 ];\n\tconst D65 = [ 0.3127, 0.3290 ];\n\n\tColorManagement.define( {\n\n\t\t[ LinearSRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: LinearTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\tworkingColorSpaceConfig: { unpackColorSpace: SRGBColorSpace },\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t\t[ SRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: SRGBTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t} );\n\n\treturn ColorManagement;\n\n}\n\nconst ColorManagement = /*@__PURE__*/ createColorManagement();\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.renderTarget = null; // assign texture to a render target\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.renderTarget = source.renderTarget;\n\t\tthis.isRenderTargetTexture = source.isRenderTargetTexture;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tset needsPMREMUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.pmremVersion ++;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\t\tthis.w /= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\t\tthis.w = e[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\t\tthis.w = clamp( this.w, min.w, max.w );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\t\tthis.w = clamp( this.w, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tresolveDepthBuffer: true,\n\t\t\tresolveStencilBuffer: true,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\t\t\tthis.textures[ i ].renderTarget = this;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\n\n\t\tthis._depthTexture = null;\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tset depthTexture( current ) {\n\n\t\tif ( this._depthTexture !== null ) this._depthTexture.renderTarget = null;\n\t\tif ( current !== null ) current.renderTarget = this;\n\n\t\tthis._depthTexture = current;\n\n\t}\n\n\tget depthTexture() {\n\n\t\treturn this._depthTexture;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\t\t\tthis.textures[ i ].renderTarget = this;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in Data3DTexture directly.\n\t\t//\n\t\t//\tconst texture = new THREE.Data3DTexture( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y &&\n\t\t\tpoint.z >= this.min.z && point.z <= this.max.z;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y &&\n\t\t\tbox.max.z >= this.min.z && box.min.z <= this.max.z;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tobject.removeFromParent();\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tobject.removeFromParent();\n\t\tobject.parent = this;\n\t\tthis.children.push( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t_childaddedEvent.child = object;\n\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t_childaddedEvent.child = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// make sure descendants are updated if required\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tchild.updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// make sure descendants are updated\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxInstanceCount = this._maxInstanceCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this._colorsTexture !== null ) object.colorsTexture = this._colorsTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nconst _v40 = /*@__PURE__*/ new Vector4();\nconst _v41 = /*@__PURE__*/ new Vector4();\nconst _v42 = /*@__PURE__*/ new Vector4();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic getInterpolatedAttribute( attr, i1, i2, i3, barycoord, target ) {\n\n\t\t_v40.setScalar( 0 );\n\t\t_v41.setScalar( 0 );\n\t\t_v42.setScalar( 0 );\n\n\t\t_v40.fromBufferAttribute( attr, i1 );\n\t\t_v41.fromBufferAttribute( attr, i2 );\n\t\t_v42.fromBufferAttribute( attr, i3 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( _v40, barycoord.x );\n\t\ttarget.addScaledVector( _v41, barycoord.y );\n\t\ttarget.addScaledVector( _v42, barycoord.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\t// onBeforeRender and onBeforeCompile only supported in WebGLRenderer\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {\n\n\t\tconsole.warn( 'Material: onBuild() has been removed.' ); // @deprecated, r166\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.indirect = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetIndirect( indirect ) {\n\n\t\tthis.indirect = indirect;\n\n\t\treturn this;\n\n\t}\n\n\tgetIndirect() {\n\n\t\treturn this.indirect;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute === undefined ) {\n\n\t\t\tconst position = [];\n\n\t\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\t} else {\n\n\t\t\tconst l = Math.min( points.length, positionAttribute.count ); // make sure data do not exceed buffer size\n\n\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tpositionAttribute.setXYZ( i, point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tif ( points.length > positionAttribute.count ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry.' );\n\n\t\t\t}\n\n\t\t\tpositionAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tconst barycoord = new Vector3();\n\t\tTriangle.getBarycoord( _intersectionPoint, _vA$1, _vB$1, _vC$1, barycoord );\n\n\t\tif ( uv ) {\n\n\t\t\tintersection.uv = Triangle.getInterpolatedAttribute( uv, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\tintersection.uv1 = Triangle.getInterpolatedAttribute( uv1, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\tintersection.normal = Triangle.getInterpolatedAttribute( normal, a, b, c, barycoord, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\t\tintersection.barycoord = barycoord;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tif ( currentRenderTarget === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\t// https://github.com/mrdoob/three.js/issues/27868\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\treturn currentRenderTarget.texture.colorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * @param {number} focalLength - Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t *\n\t * @returns {number}\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t *\n\t * @param {number} distance\n\t * @param {Vector2} minTarget\n\t * @param {Vector2} maxTarget\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t *\n\t * @param {number} distance\n\t * @param {Vector2} target - Vector2 target used to store result where x is width and y is height.\n\t * @returns {Vector2}\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t *\n\t * @param {number} fullWidth\n\t * @param {number} fullHeight\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} width\n\t * @param {number} height\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\n\t\tthis.environmentIntensity = 1;\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\n\t\tthis.environmentIntensity = source.environmentIntensity;\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tremoveLevel( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0; i < levels.length; i ++ ) {\n\n\t\t\tif ( levels[ i ].distance === distance ) {\n\n\t\t\t\tconst removedElements = levels.splice( i, 1 );\n\t\t\t\tthis.remove( removedElements[ 0 ].object );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$5.copy( this.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$5 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$4 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ).fill( 1 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\tif ( this.morphTexture !== null ) {\n\n\t\t\tthis.morphTexture.dispose();\n\t\t\tthis.morphTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$3.center.set( 0, 0, 0 );\n\t\t_sphere$3.radius = 0.7071067811865476;\n\t\t_sphere$3.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction ascIdSort( a, b ) {\n\n\treturn a - b;\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( start, count, z, index ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\t\t\t\tindex: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = start;\n\t\titem.count = count;\n\t\titem.z = z;\n\t\titem.index = index;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _whiteColor = /*@__PURE__*/ new Color( 1, 1, 1 );\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _forward = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\n// safely copies array contents to a potentially smaller array\nfunction copyArrayContents( src, target ) {\n\n\tif ( src.constructor !== target.constructor ) {\n\n\t\t// if arrays are of a different type (eg due to index size increasing) then data must be per-element copied\n\t\tconst len = Math.min( src.length, target.length );\n\t\tfor ( let i = 0; i < len; i ++ ) {\n\n\t\t\ttarget[ i ] = src[ i ];\n\n\t\t}\n\n\t} else {\n\n\t\t// if the arrays use the same data layout we can use a fast block copy\n\t\tconst len = Math.min( src.length, target.length );\n\t\ttarget.set( new src.constructor( src.buffer, 0, len ) );\n\n\t}\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxInstanceCount() {\n\n\t\treturn this._maxInstanceCount;\n\n\t}\n\n\tget instanceCount() {\n\n\t\treturn this._instanceInfo.length - this._availableInstanceIds.length;\n\n\t}\n\n\tget unusedVertexCount() {\n\n\t\treturn this._maxVertexCount - this._nextVertexStart;\n\n\t}\n\n\tget unusedIndexCount() {\n\n\t\treturn this._maxIndexCount - this._nextIndexStart;\n\n\t}\n\n\tconstructor( maxInstanceCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\t// stores visible, active, and geometry id per instance and reserved buffer ranges for geometries\n\t\tthis._instanceInfo = [];\n\t\tthis._geometryInfo = [];\n\n\t\t// instance, geometry ids that have been set as inactive, and are available to be overwritten\n\t\tthis._availableInstanceIds = [];\n\t\tthis._availableGeometryIds = [];\n\n\t\t// used to track where the next point is that geometry should be inserted\n\t\tthis._nextIndexStart = 0;\n\t\tthis._nextVertexStart = 0;\n\t\tthis._geometryCount = 0;\n\n\t\t// flags\n\t\tthis._visibilityChanged = true;\n\t\tthis._geometryInitialized = false;\n\n\t\t// cached user options\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\t// buffers for multi draw\n\t\tthis._multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._multiDrawInstances = null;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\t\tthis._indirectTexture = null;\n\t\tthis._colorsTexture = null;\n\n\t\tthis._initMatricesTexture();\n\t\tthis._initIndirectTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initIndirectTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\tconst indirectArray = new Uint32Array( size * size );\n\t\tconst indirectTexture = new DataTexture( indirectArray, size, size, RedIntegerFormat, UnsignedIntType );\n\n\t\tthis._indirectTexture = indirectTexture;\n\n\t}\n\n\t_initColorsTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\t// 4 floats per RGBA pixel initialized to white\n\t\tconst colorsArray = new Float32Array( size * size * 4 ).fill( 1 );\n\t\tconst colorsTexture = new DataTexture( colorsArray, size, size, RGBAFormat, FloatType );\n\t\tcolorsTexture.colorSpace = ColorManagement.workingColorSpace;\n\n\t\tthis._colorsTexture = colorsTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\t// Reserve last u16 index for primitive restart.\n\t\t\t\tconst indexArray = maxVertexCount > 65535\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `THREE.BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tvalidateInstanceId( instanceId ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tif ( instanceId < 0 || instanceId >= instanceInfo.length || instanceInfo[ instanceId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid instanceId ${instanceId}. Instance is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\tvalidateGeometryId( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId < 0 || geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid geometryId ${geometryId}. Geometry is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddInstance( geometryId ) {\n\n\t\tconst atCapacity = this._instanceInfo.length >= this.maxInstanceCount;\n\n\t\t// ensure we're not over geometry\n\t\tif ( atCapacity && this._availableInstanceIds.length === 0 ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum item count reached.' );\n\n\t\t}\n\n\t\tconst instanceInfo = {\n\t\t\tvisible: true,\n\t\t\tactive: true,\n\t\t\tgeometryIndex: geometryId,\n\t\t};\n\n\t\tlet drawId = null;\n\n\t\t// Prioritize using previously freed instance ids\n\t\tif ( this._availableInstanceIds.length > 0 ) {\n\n\t\t\tthis._availableInstanceIds.sort( ascIdSort );\n\n\t\t\tdrawId = this._availableInstanceIds.shift();\n\t\t\tthis._instanceInfo[ drawId ] = instanceInfo;\n\n\t\t} else {\n\n\t\t\tdrawId = this._instanceInfo.length;\n\t\t\tthis._instanceInfo.push( instanceInfo );\n\n\t\t}\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\t_matrix$1.identity().toArray( matricesTexture.image.data, drawId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tif ( colorsTexture ) {\n\n\t\t\t_whiteColor.toArray( colorsTexture.image.data, drawId * 4 );\n\t\t\tcolorsTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn drawId;\n\n\t}\n\n\taddGeometry( geometry, reservedVertexCount = - 1, reservedIndexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst geometryInfo = {\n\t\t\t// geometry information\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\treservedVertexCount: - 1,\n\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t\treservedIndexCount: - 1,\n\n\t\t\t// draw range information\n\t\t\tstart: - 1,\n\t\t\tcount: - 1,\n\n\t\t\t// state\n\t\t\tboundingBox: null,\n\t\t\tboundingSphere: null,\n\t\t\tactive: true,\n\t\t};\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tgeometryInfo.vertexStart = this._nextVertexStart;\n\t\tgeometryInfo.reservedVertexCount = reservedVertexCount === - 1 ? geometry.getAttribute( 'position' ).count : reservedVertexCount;\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tgeometryInfo.indexStart = this._nextIndexStart;\n\t\t\tgeometryInfo.reservedIndexCount = reservedIndexCount === - 1 ? index.count : reservedIndexCount;\n\n\t\t}\n\n\t\tif (\n\t\t\tgeometryInfo.indexStart !== - 1 &&\n\t\t\tgeometryInfo.indexStart + geometryInfo.reservedIndexCount > this._maxIndexCount ||\n\t\t\tgeometryInfo.vertexStart + geometryInfo.reservedVertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\t// update id\n\t\tlet geometryId;\n\t\tif ( this._availableGeometryIds.length > 0 ) {\n\n\t\t\tthis._availableGeometryIds.sort( ascIdSort );\n\n\t\t\tgeometryId = this._availableGeometryIds.shift();\n\t\t\tgeometryInfoList[ geometryId ] = geometryInfo;\n\n\n\t\t} else {\n\n\t\t\tgeometryId = this._geometryCount;\n\t\t\tthis._geometryCount ++;\n\t\t\tgeometryInfoList.push( geometryInfo );\n\n\t\t}\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\t// increment the next geometry position\n\t\tthis._nextIndexStart = geometryInfo.indexStart + geometryInfo.reservedIndexCount;\n\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( geometryId, geometry ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > geometryInfo.reservedIndexCount ||\n\t\t\tgeometry.attributes.position.count > geometryInfo.reservedVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry buffer data over\n\t\tconst vertexStart = geometryInfo.vertexStart;\n\t\tconst reservedVertexCount = geometryInfo.reservedVertexCount;\n\t\tgeometryInfo.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = reservedVertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = geometryInfo.indexStart;\n\t\t\tconst reservedIndexCount = geometryInfo.reservedIndexCount;\n\t\t\tgeometryInfo.indexCount = geometry.getIndex().count;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedIndexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\t\t\tdstIndex.addUpdateRange( indexStart, geometryInfo.reservedIndexCount );\n\n\t\t}\n\n\t\t// update the draw range\n\t\tgeometryInfo.start = hasIndex ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\t\tgeometryInfo.count = hasIndex ? geometryInfo.indexCount : geometryInfo.vertexCount;\n\n\t\t// store the bounding boxes\n\t\tgeometryInfo.boundingBox = null;\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tgeometryInfo.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tgeometryInfo.boundingSphere = null;\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tgeometryInfo.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn geometryId;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// delete any instances associated with this geometry\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].geometryIndex === geometryId ) {\n\n\t\t\t\tthis.deleteInstance( i );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometryInfoList[ geometryId ].active = false;\n\t\tthis._availableGeometryIds.push( geometryId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteInstance( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tthis._instanceInfo[ instanceId ].active = false;\n\t\tthis._availableInstanceIds.push( instanceId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\toptimize() {\n\n\t\t// track the next indices to copy data to\n\t\tlet nextVertexStart = 0;\n\t\tlet nextIndexStart = 0;\n\n\t\t// Iterate over all geometry ranges in order sorted from earliest in the geometry buffer to latest\n\t\t// in the geometry buffer. Because draw range objects can be reused there is no guarantee of their order.\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst indices = geometryInfoList\n\t\t\t.map( ( e, i ) => i )\n\t\t\t.sort( ( a, b ) => {\n\n\t\t\t\treturn geometryInfoList[ a ].vertexStart - geometryInfoList[ b ].vertexStart;\n\n\t\t\t} );\n\n\t\tconst geometry = this.geometry;\n\t\tfor ( let i = 0, l = geometryInfoList.length; i < l; i ++ ) {\n\n\t\t\t// if a geometry range is inactive then don't copy anything\n\t\t\tconst index = indices[ i ];\n\t\t\tconst geometryInfo = geometryInfoList[ index ];\n\t\t\tif ( geometryInfo.active === false ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// if a geometry contains an index buffer then shift it, as well\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\tif ( geometryInfo.indexStart !== nextIndexStart ) {\n\n\t\t\t\t\tconst { indexStart, vertexStart, reservedIndexCount } = geometryInfo;\n\t\t\t\t\tconst index = geometry.index;\n\t\t\t\t\tconst array = index.array;\n\n\t\t\t\t\t// shift the index pointers based on how the vertex data will shift\n\t\t\t\t\t// adjusting the index must happen first so the original vertex start value is available\n\t\t\t\t\tconst elementDelta = nextVertexStart - vertexStart;\n\t\t\t\t\tfor ( let j = indexStart; j < indexStart + reservedIndexCount; j ++ ) {\n\n\t\t\t\t\t\tarray[ j ] = array[ j ] + elementDelta;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tindex.array.copyWithin( nextIndexStart, indexStart, indexStart + reservedIndexCount );\n\t\t\t\t\tindex.addUpdateRange( nextIndexStart, reservedIndexCount );\n\n\t\t\t\t\tgeometryInfo.indexStart = nextIndexStart;\n\n\t\t\t\t}\n\n\t\t\t\tnextIndexStart += geometryInfo.reservedIndexCount;\n\n\t\t\t}\n\n\t\t\t// if a geometry needs to be moved then copy attribute data to overwrite unused space\n\t\t\tif ( geometryInfo.vertexStart !== nextVertexStart ) {\n\n\t\t\t\tconst { vertexStart, reservedVertexCount } = geometryInfo;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tfor ( const key in attributes ) {\n\n\t\t\t\t\tconst attribute = attributes[ key ];\n\t\t\t\t\tconst { array, itemSize } = attribute;\n\t\t\t\t\tarray.copyWithin( nextVertexStart * itemSize, vertexStart * itemSize, ( vertexStart + reservedVertexCount ) * itemSize );\n\t\t\t\t\tattribute.addUpdateRange( nextVertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tgeometryInfo.vertexStart = nextVertexStart;\n\n\t\t\t}\n\n\t\t\tnextVertexStart += geometryInfo.reservedVertexCount;\n\t\t\tgeometryInfo.start = geometry.index ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\n\t\t\t// step the next geometry points to the shifted position\n\t\t\tthis._nextIndexStart = geometry.index ? geometryInfo.indexStart + geometryInfo.reservedIndexCount : 0;\n\t\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingBox === null ) {\n\n\t\t\tconst box = new Box3();\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tgeometryInfo.boundingBox = box;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingBox );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingSphere === null ) {\n\n\t\t\tconst sphere = new Sphere();\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tgeometryInfo.boundingSphere = sphere;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingSphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tmatrix.toArray( matricesArray, instanceId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn matrix.fromArray( this._matricesTexture.image.data, instanceId * 16 );\n\n\t}\n\n\tsetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._colorsTexture === null ) {\n\n\t\t\tthis._initColorsTexture();\n\n\t\t}\n\n\t\tcolor.toArray( this._colorsTexture.image.data, instanceId * 4 );\n\t\tthis._colorsTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn color.fromArray( this._colorsTexture.image.data, instanceId * 4 );\n\n\t}\n\n\tsetVisibleAt( instanceId, value ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._instanceInfo[ instanceId ].visible === value ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis._instanceInfo[ instanceId ].visible = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].visible;\n\n\t}\n\n\tsetGeometryIdAt( instanceId, geometryId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tthis._instanceInfo[ instanceId ].geometryIndex = geometryId;\n\n\t\treturn this;\n\n\t}\n\n\tgetGeometryIdAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].geometryIndex;\n\n\t}\n\n\tgetGeometryRangeAt( geometryId, target = {} ) {\n\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\ttarget.vertexStart = geometryInfo.vertexStart;\n\t\ttarget.vertexCount = geometryInfo.vertexCount;\n\t\ttarget.reservedVertexCount = geometryInfo.reservedVertexCount;\n\n\t\ttarget.indexStart = geometryInfo.indexStart;\n\t\ttarget.indexCount = geometryInfo.indexCount;\n\t\ttarget.reservedIndexCount = geometryInfo.reservedIndexCount;\n\n\t\ttarget.start = geometryInfo.start;\n\t\ttarget.count = geometryInfo.count;\n\n\t\treturn target;\n\n\t}\n\n\tsetInstanceCount( maxInstanceCount ) {\n\n\t\t// shrink the available instances as much as possible\n\t\tconst availableInstanceIds = this._availableInstanceIds;\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tavailableInstanceIds.sort( ascIdSort );\n\t\twhile ( availableInstanceIds[ availableInstanceIds.length - 1 ] === instanceInfo.length ) {\n\n\t\t\tinstanceInfo.pop();\n\t\t\tavailableInstanceIds.pop();\n\n\t\t}\n\n\t\t// throw an error if it can't be shrunk to the desired size\n\t\tif ( maxInstanceCount < instanceInfo.length ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Instance ids outside the range ${ maxInstanceCount } are being used. Cannot shrink instance count.` );\n\n\t\t}\n\n\t\t// copy the multi draw counts\n\t\tconst multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tconst multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tcopyArrayContents( this._multiDrawCounts, multiDrawCounts );\n\t\tcopyArrayContents( this._multiDrawStarts, multiDrawStarts );\n\n\t\tthis._multiDrawCounts = multiDrawCounts;\n\t\tthis._multiDrawStarts = multiDrawStarts;\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\n\t\t// update texture data for instance sampling\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst colorsTexture = this._colorsTexture;\n\n\t\tindirectTexture.dispose();\n\t\tthis._initIndirectTexture();\n\t\tcopyArrayContents( indirectTexture.image.data, this._indirectTexture.image.data );\n\n\t\tmatricesTexture.dispose();\n\t\tthis._initMatricesTexture();\n\t\tcopyArrayContents( matricesTexture.image.data, this._matricesTexture.image.data );\n\n\t\tif ( colorsTexture ) {\n\n\t\t\tcolorsTexture.dispose();\n\t\t\tthis._initColorsTexture();\n\t\t\tcopyArrayContents( colorsTexture.image.data, this._colorsTexture.image.data );\n\n\t\t}\n\n\t}\n\n\tsetGeometrySize( maxVertexCount, maxIndexCount ) {\n\n\t\t// Check if we can shrink to the requested vertex attribute size\n\t\tconst validRanges = [ ...this._geometryInfo ].filter( info => info.active );\n\t\tconst requiredVertexLength = Math.max( ...validRanges.map( range => range.vertexStart + range.reservedVertexCount ) );\n\t\tif ( requiredVertexLength > maxVertexCount ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry vertex values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t}\n\n\t\t// Check if we can shrink to the requested index attribute size\n\t\tif ( this.geometry.index ) {\n\n\t\t\tconst requiredIndexLength = Math.max( ...validRanges.map( range => range.indexStart + range.reservedIndexCount ) );\n\t\t\tif ( requiredIndexLength > maxIndexCount ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Geometry index values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\t// dispose of the previous geometry\n\t\tconst oldGeometry = this.geometry;\n\t\toldGeometry.dispose();\n\n\t\t// recreate the geometry needed based on the previous variant\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tif ( this._geometryInitialized ) {\n\n\t\t\tthis._geometryInitialized = false;\n\t\t\tthis.geometry = new BufferGeometry();\n\t\t\tthis._initializeGeometry( oldGeometry );\n\n\t\t}\n\n\t\t// copy data from the previous geometry\n\t\tconst geometry = this.geometry;\n\t\tif ( oldGeometry.index ) {\n\n\t\t\tcopyArrayContents( oldGeometry.index.array, geometry.index.array );\n\n\t\t}\n\n\t\tfor ( const key in oldGeometry.attributes ) {\n\n\t\t\tcopyArrayContents( oldGeometry.attributes[ key ].array, geometry.attributes[ key ].array );\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( ! instanceInfo[ i ].visible || ! instanceInfo[ i ].active ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t_mesh.geometry.setDrawRange( geometryInfo.start, geometryInfo.count );\n\n\t\t\t// get the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( geometryId, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( geometryId, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._geometryInfo = source._geometryInfo.map( info => ( {\n\t\t\t...info,\n\n\t\t\tboundingBox: info.boundingBox !== null ? info.boundingBox.clone() : null,\n\t\t\tboundingSphere: info.boundingSphere !== null ? info.boundingSphere.clone() : null,\n\t\t} ) );\n\t\tthis._instanceInfo = source._instanceInfo.map( info => ( { ...info } ) );\n\n\t\tthis._maxInstanceCount = source._maxInstanceCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.data.slice();\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture = source._colorsTexture.clone();\n\t\t\tthis._colorsTexture.image.data = this._colorsTexture.image.data.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\n\t\tthis._indirectTexture.dispose();\n\t\tthis._indirectTexture = null;\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture.dispose();\n\t\t\tthis._colorsTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst indirectArray = indirectTexture.image.data;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_matrix$1\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_matrix$1,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet multiDrawCount = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_matrix$1.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _matrix$1 );\n\t\t\t_forward.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ).transformDirection( _matrix$1 );\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tconst z = _temp.subVectors( _sphere$2.center, _vector$5 ).dot( _forward );\n\t\t\t\t\t\t_renderList.push( geometryInfo.start, geometryInfo.count, z, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ multiDrawCount ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ multiDrawCount ] = item.count;\n\t\t\t\tindirectArray[ multiDrawCount ] = item.index;\n\t\t\t\tmultiDrawCount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tmultiDrawStarts[ multiDrawCount ] = geometryInfo.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ multiDrawCount ] = geometryInfo.count;\n\t\t\t\t\t\tindirectArray[ multiDrawCount ] = i;\n\t\t\t\t\t\tmultiDrawCount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tindirectTexture.needsUpdate = true;\n\t\tthis._multiDrawCount = multiDrawCount;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vStart = /*@__PURE__*/ new Vector3();\nconst _vEnd = /*@__PURE__*/ new Vector3();\n\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst a = index.getX( end - 1 );\n\t\t\t\tconst b = index.getX( start );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b ) {\n\n\tconst positionAttribute = object.geometry.attributes.position;\n\n\t_vStart.fromBufferAttribute( positionAttribute, a );\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\n\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\n\n\tif ( distSq > thresholdSq ) return;\n\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\treturn {\n\n\t\tdistance: distance,\n\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t// point: raycaster.ray.at( distance ),\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\n\t\tindex: a,\n\t\tface: null,\n\t\tfaceIndex: null,\n\t\tbarycoord: null,\n\t\tobject: object\n\n\t};\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tfaceIndex: null,\n\t\t\tbarycoord: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format = DepthFormat ) {\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tif ( radiusTop > 0 || y !== 0 ) {\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( radiusBottom > 0 || y !== heightSegments - 1 ) {\n\n\t\t\t\t\t\tindices.push( b, c, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._dispersion = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget dispersion() {\n\n\t\treturn this._dispersion;\n\n\t}\n\n\tset dispersion( value ) {\n\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._dispersion = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.dispersion = source.dispersion;\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}, ( e ) => {\n\n\t\t\t\t\t\t\t\t\tcontroller.error( e );\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\t\tif ( this.target !== undefined ) data.object.target = this.target.uuid;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.intensity = 1;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.intensity = source.intensity;\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.intensity !== 1 ) object.intensity = this.intensity;\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = this.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tcreateMaterialFromType( type ) {\n\n\t\treturn MaterialLoader.createMaterialFromType( type );\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) { // @deprecated, r165\n\n\t\tconsole.warn( 'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.' );\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxInstanceCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxInstanceCount = data.maxInstanceCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\t\t\t\tif ( data.colorsTexture !== undefined ) object._colorsTexture = getTexture( data.colorsTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.intensity !== undefined ) object.shadow.intensity = data.shadow.intensity;\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tbindLightTargets( object ) {\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isDirectionalLight || child.isSpotLight ) {\n\n\t\t\t\tconst uuid = child.target;\n\n\t\t\t\tconst target = object.getObjectByProperty( 'uuid', uuid );\n\n\t\t\t\tif ( target !== undefined ) {\n\n\t\t\t\t\tchild.target = target;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.target = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn performance.now();\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop( delay = 0 ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop( this.context.currentTime + delay );\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\t\tthis._progress = 0;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.sourceType !== 'buffer' ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio source type cannot be copied.' );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.autoplay = source.autoplay;\n\n\t\tthis.buffer = source.buffer;\n\t\tthis.detune = source.detune;\n\t\tthis.loop = source.loop;\n\t\tthis.loopStart = source.loopStart;\n\t\tthis.loopEnd = source.loopEnd;\n\t\tthis.offset = source.offset;\n\t\tthis.duration = source.duration;\n\t\tthis.playbackRate = source.playbackRate;\n\t\tthis.hasPlaybackControl = source.hasPlaybackControl;\n\t\tthis.sourceType = source.sourceType;\n\n\t\tthis.filters = source.filters.slice();\n\n\t\treturn this;\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor( this.listener ).copy( this, recursive );\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.isMaterial === true ) {\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.isObject3D === true ) {\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass RenderTarget3D extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isRenderTarget3D = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass RenderTargetArray extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isRenderTargetArray = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tlet propagate = true;\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tconst result = object.raycast( raycaster, intersects );\n\n\t\tif ( result === false ) propagate = false;\n\n\t}\n\n\tif ( propagate === true && recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = clamp( this.phi, EPS, Math.PI - EPS );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix2 {\n\n\tconstructor( n11, n12, n21, n22 ) {\n\n\t\tMatrix2.prototype.isMatrix2 = true;\n\n\t\tthis.elements = [\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n21, n22 );\n\n\t\t}\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( n11, n12, n21, n22 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 2 ] = n12;\n\t\tte[ 1 ] = n21; te[ 3 ] = n22;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// Adjust z values based on coordinate system\n\t\tconst nearZ = this.camera.coordinateSystem === WebGLCoordinateSystem ? - 1 : 0;\n\n\t\t// center / target\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, nearZ );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, nearZ );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, nearZ );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, nearZ );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, nearZ );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, nearZ );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, nearZ );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, nearZ );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, nearZ );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, nearZ );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, nearZ );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, nearZ );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass Controls extends EventDispatcher {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\tthis.enabled = true;\n\n\t\tthis.state = - 1;\n\n\t\tthis.keys = {};\n\t\tthis.mouseButtons = { LEFT: null, MIDDLE: null, RIGHT: null };\n\t\tthis.touches = { ONE: null, TWO: null };\n\n\t}\n\n\tconnect() {}\n\n\tdisconnect() {}\n\n\tdispose() {}\n\n\tupdate( /* delta */ ) {}\n\n}\n\nfunction contain( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t} else {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction cover( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t} else {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction fill( texture ) {\n\n\ttexture.repeat.x = 1;\n\ttexture.repeat.y = 1;\n\n\ttexture.offset.x = 0;\n\ttexture.offset.y = 0;\n\n\treturn texture;\n\n}\n\n\n\n/**\n * Given the width, height, format, and type of a texture. Determines how many\n * bytes must be used to represent the texture.\n *\n * @param {Number} width\n * @param {Number} height\n * @param {Number} format\n * @param {Number} type\n * @return {Number} The number of bytes required to represent the texture.\n */\nfunction getByteLength( width, height, format, type ) {\n\n\tconst typeByteLength = getTextureTypeByteLength( type );\n\n\tswitch ( format ) {\n\n\t\t// https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n\t\tcase AlphaFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceAlphaFormat:\n\t\t\treturn width * height * 2;\n\t\tcase RedFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RedIntegerFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGIntegerFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBFormat:\n\t\t\treturn ( ( width * height * 3 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAIntegerFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\n\t\tcase RGB_S3TC_DXT1_Format:\n\t\tcase RGBA_S3TC_DXT1_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_S3TC_DXT3_Format:\n\t\tcase RGBA_S3TC_DXT5_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/\n\t\tcase RGB_PVRTC_2BPPV1_Format:\n\t\tcase RGBA_PVRTC_2BPPV1_Format:\n\t\t\treturn ( Math.max( width, 16 ) * Math.max( height, 8 ) ) / 4;\n\t\tcase RGB_PVRTC_4BPPV1_Format:\n\t\tcase RGBA_PVRTC_4BPPV1_Format:\n\t\t\treturn ( Math.max( width, 8 ) * Math.max( height, 8 ) ) / 2;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/\n\t\tcase RGB_ETC1_Format:\n\t\tcase RGB_ETC2_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_ETC2_EAC_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\n\t\tcase RGBA_ASTC_4x4_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x4_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x5_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x5_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x6_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x5_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_8x6_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x8_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x5_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_10x6_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_10x8_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x10_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x10_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x12_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 11 ) / 12 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/\n\t\tcase RGBA_BPTC_Format:\n\t\tcase RGB_BPTC_SIGNED_Format:\n\t\tcase RGB_BPTC_UNSIGNED_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/\n\t\tcase RED_RGTC1_Format:\n\t\tcase SIGNED_RED_RGTC1_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 8;\n\t\tcase RED_GREEN_RGTC2_Format:\n\t\tcase SIGNED_RED_GREEN_RGTC2_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t}\n\n\tthrow new Error(\n\t\t`Unable to determine texture byte length for ${format} format.`,\n\t);\n\n}\n\nfunction getTextureTypeByteLength( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase UnsignedByteType:\n\t\tcase ByteType:\n\t\t\treturn { byteLength: 1, components: 1 };\n\t\tcase UnsignedShortType:\n\t\tcase ShortType:\n\t\tcase HalfFloatType:\n\t\t\treturn { byteLength: 2, components: 1 };\n\t\tcase UnsignedShort4444Type:\n\t\tcase UnsignedShort5551Type:\n\t\t\treturn { byteLength: 2, components: 4 };\n\t\tcase UnsignedIntType:\n\t\tcase IntType:\n\t\tcase FloatType:\n\t\t\treturn { byteLength: 4, components: 1 };\n\t\tcase UnsignedInt5999Type:\n\t\t\treturn { byteLength: 4, components: 3 };\n\n\t}\n\n\tthrow new Error( `Unknown texture type ${type}.` );\n\n}\n\nconst TextureUtils = {\n\tcontain,\n\tcover,\n\tfill,\n\tgetByteLength\n};\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, Controls, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RAD2DEG, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDepthPacking, RGBFormat, RGBIntegerFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGDepthPacking, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RenderTarget3D, RenderTargetArray, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TextureUtils, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLRenderTarget, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, arrayNeedsUint32, cloneUniforms, createCanvasElement, createElementNS, getByteLength, getUnlitUniformColorSpace, mergeUniforms, probeAsync, toNormalizedProjectionMatrix, toReversedProjectionMatrix, warnOnce };\n"],"names":["REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","LinearTransfer","SRGBTransfer","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","type","listener","undefined","this","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","toLowerCase","clamp","value","min","max","euclideanModulo","n","m","lerp","x","y","t","denormalize","constructor","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","Error","normalize","round","MathUtils","mapLinear","a1","a2","b1","b2","inverseLerp","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","Vector2","prototype","isVector2","width","height","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","Symbol","iterator","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","name","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","probeAsync","gl","sync","interval","Promise","resolve","reject","setTimeout","probe","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","TIMEOUT_EXPIRED","toNormalizedProjectionMatrix","projectionMatrix","toReversedProjectionMatrix","LINEAR_REC709_TO_XYZ","XYZ_TO_LINEAR_REC709","createColorManagement","ColorManagement","enabled","workingColorSpace","spaces","convert","color","sourceColorSpace","targetColorSpace","transfer","SRGBToLinear","primaries","toXYZ","fromXYZ","LinearToSRGB","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","colorSpace","getTransfer","getLuminanceCoefficients","luminanceCoefficients","define","colorSpaces","Object","assign","_getMatrix","targetMatrix","_getDrawingBufferColorSpace","outputColorSpaceConfig","drawingBufferColorSpace","_getUnpackColorSpace","workingColorSpaceConfig","unpackColorSpace","REC709_PRIMARIES","REC709_LUMINANCE_COEFFICIENTS","D65","whitePoint","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","defineProperty","uuid","dataReady","version","needsUpdate","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","super","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","renderTarget","isRenderTargetTexture","pmremVersion","updateMatrix","JSON","parse","stringify","textures","metadata","generator","wrap","keys","dispose","transformUv","uv","needsPMREMUpdate","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","setFromMatrixPosition","getZ","getW","RenderTarget","options","isRenderTarget","depth","scissor","scissorTest","viewport","depthBuffer","stencilBuffer","resolveDepthBuffer","resolveStencilBuffer","depthTexture","samples","count","texture","_depthTexture","current","setSize","il","WebGLRenderTarget","isWebGLRenderTarget","DataArrayTexture","isDataArrayTexture","wrapR","layerUpdates","Set","addLayerUpdate","layerIndex","clearLayerUpdates","clear","Data3DTexture","isData3DTexture","Quaternion","isQuaternion","_x","_y","_z","_w","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","multiplyQuaternionsFlat","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","r1","r2","_onChange","callback","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","u","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","isNaN","intersectTriangle","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","p","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","isObject3D","parent","DEFAULT_UP","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","error","removeFromParent","remove","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","serialize","library","element","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxInstanceCount","_maxInstanceCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","_colorsTexture","colorsTexture","boundingSphere","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","_v40","_v41","_v42","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getInterpolation","p3","v3","getInterpolatedAttribute","attr","i1","i2","i3","barycoord","isFrontFacing","setFromPointsAndIndices","i0","setFromAttributeAndIndices","getArea","getMidpoint","getPlane","setFromCoplanarPoints","d4","vc","d5","d6","vb","va","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","charAt","setColorName","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","NAMES","_materialId","Material","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","alphaTest","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","dispersion","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","onBuild","MeshBasicMaterial","isMeshBasicMaterial","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","TypeError","isBufferAttribute","usage","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Uint16BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","_id$1","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","isBufferGeometry","indirect","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setIndirect","getIndirect","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","checkGeometryIntersection","faceIndex","face","checkIntersection$1","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","ShaderMaterial","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","cloneUniformsGroups","Camera","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","concat","scene","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","FogExp2","density","isFogExp2","Fog","isFog","Scene","backgroundBlurriness","backgroundIntensity","backgroundRotation","environmentIntensity","environmentRotation","overrideMaterial","__THREE_DEVTOOLS__","CustomEvent","detail","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$7","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","SpriteMaterial","isSpriteMaterial","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","isSprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","levels","isLOD","autoUpdate","level","addLevel","hysteresis","removeLevel","removedElements","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_vector3","_matrix4","_vertex","_sphere$5","_inverseMatrix$2","_ray$2","SkinnedMesh","bindMatrixInverse","applyBoneTransform","bind","calculateInverses","pose","normalizeSkinWeights","skinWeight","skinIndex","weight","boneIndex","bones","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","boneTexture","init","inverse","bone","computeBoneTexture","getBoneByName","json","boneInverse","InstancedBufferAttribute","meshPerAttribute","isInstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$4","InstancedMesh","morphTexture","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","objectInfluences","dataIndex","raycastTimes","instanceId","setColorAt","fill","setMorphAt","morphInfluencesSum","morphBaseInfluence","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","end","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$3","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","ascIdSort","sortOpaque","sortTransparent","MultiDrawRenderList","pool","list","item","reset","_matrix$1","_whiteColor","_frustum","_box$1","_sphere$2","_vector$5","_forward","_temp","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","copyArrayContents","BatchedMesh","instanceCount","_instanceInfo","_availableInstanceIds","unusedVertexCount","_nextVertexStart","unusedIndexCount","_nextIndexStart","customSort","_geometryInfo","_availableGeometryIds","_visibilityChanged","_multiDrawCounts","_multiDrawStarts","_multiDrawCount","_multiDrawInstances","_indirectTexture","_initMatricesTexture","_initIndirectTexture","matricesArray","indirectArray","indirectTexture","_initColorsTexture","colorsArray","_initializeGeometry","reference","attributeName","srcAttribute","dstArray","dstAttribute","indexArray","_validateGeometry","batchGeometry","Boolean","validateInstanceId","instanceInfo","validateGeometryId","geometryId","geometryInfoList","setCustomSort","func","geometryIndex","getBoundingBoxAt","getBoundingSphereAt","addInstance","drawId","sort","shift","addGeometry","reservedVertexCount","reservedIndexCount","geometryInfo","vertexStart","indexStart","indexCount","setGeometryAt","hasIndex","dstIndex","srcIndex","deleteGeometry","deleteInstance","optimize","nextVertexStart","nextIndexStart","elementDelta","copyWithin","iv","setVisibleAt","getVisibleAt","setGeometryIdAt","getGeometryIdAt","getGeometryRangeAt","setInstanceCount","availableInstanceIds","pop","multiDrawCounts","multiDrawStarts","setGeometrySize","validRanges","filter","info","oldGeometry","batchId","bytesPerElement","BYTES_PER_ELEMENT","multiDrawCount","culled","shadowCamera","depthMaterial","LineBasicMaterial","isLineBasicMaterial","linecap","linejoin","_vStart","_vEnd","_inverseMatrix$1","_ray$1","_sphere$1","_intersectPointOnRay","_intersectPointOnSegment","Line","computeLineDistances","lineDistances","threshold","params","localThreshold","localThresholdSq","isLineSegments","checkIntersection","isLineLoop","thresholdSq","_start","_end","LineSegments","LineLoop","PointsMaterial","isPointsMaterial","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","Group","isGroup","FramebufferTexture","isFramebufferTexture","DepthTexture","isDepthTexture","compareFunction","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","last","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","px","py","pz","CatmullRom","QuadraticBezier","k","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","intPoint","Curves","freeze","__proto__","ArcCurve","aRadius","isArcCurve","CatmullRomCurve3","curveType","isCatmullRomCurve3","LineCurve3","isLineCurve3","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","segmentLength","lens","cacheLengths","sums","resolution","pts","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","phiStart","phiLength","initNormals","inverseSegments","vertex","curNormal","prevNormal","base","CapsuleGeometry","capSegments","radialSegments","path","CircleGeometry","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","openEnded","halfHeight","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","applyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","Shape","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","next","prev","minX","minY","maxX","maxY","invSize","queue","steiner","getLeftmost","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","area","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","maxZ","locallyInside","isValidDiagonal","splitPolygon","bridge","hx","hy","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","forEach","ExtrudeGeometry","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","splineTube","binormal","position2","extrudeByPath","shapePoints","reverse","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","layer","buildLidFaces","buildSideFaces","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","OctahedronGeometry","PlaneGeometry","width_half","height_half","segment_width","segment_height","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateSegment","generateIndices","generateBufferData","isUniqueEdge","edges","hash1","hash2","has","Geometries","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","hash","reverseHash","index0","WireframeGeometry","o","ol","ShadowMaterial","isShadowMaterial","RawShaderMaterial","isRawShaderMaterial","MeshStandardMaterial","isMeshStandardMaterial","MeshPhysicalMaterial","isMeshPhysicalMaterial","ior","get","sheenColorMap","sheenRoughnessMap","_anisotropy","_clearcoat","_dispersion","_iridescence","_sheen","_transmission","MeshPhongMaterial","isMeshPhongMaterial","MeshToonMaterial","isMeshToonMaterial","MeshNormalMaterial","isMeshNormalMaterial","MeshLambertMaterial","isMeshLambertMaterial","MeshDepthMaterial","isMeshDepthMaterial","depthPacking","MeshDistanceMaterial","isMeshDistanceMaterial","MeshMatcapMaterial","isMeshMatcapMaterial","LineDashedMaterial","isLineDashedMaterial","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","time","apply","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","settings","DefaultSettings_","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","track","trackType","ValueTypeName","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","timeOffset","timeScale","trim","startTime","endTime","nKeys","to","validate","valid","prevTime","currTime","smoothInterpolation","lastIndex","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","tracks","blendMode","NormalAnimationBlendMode","resetDuration","jsonTracks","frameTime","fps","parseKeyframeTrack","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","morphTargets","animationToMorphTargets","pattern","morphTarget","parts","match","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","typeName","getTrackTypeForValueTypeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","urlModifier","isLoading","itemsLoaded","itemsTotal","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","response","FileLoader","cached","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","then","status","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","controller","readData","read","done","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","DOMParser","parseFromString","label","decoder","TextDecoder","decode","catch","err","finally","setResponseType","setMimeType","ImageLoader","onImageLoad","removeEventListeners","onImageError","TextureLoader","Light","intensity","groundColor","decay","penumbra","shadow","HemisphereLight","skyColor","isHemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","bias","normalBias","blurSamples","mapSize","mapPass","_frameExtents","_viewportCount","_viewports","getViewportCount","getFrustum","updateMatrices","light","shadowMatrix","getViewport","viewportIndex","getFrameExtents","SpotLightShadow","isSpotLightShadow","SpotLight","isSpotLight","power","_projScreenMatrix","_lightPositionWorld","_lookTarget","PointLightShadow","isPointLightShadow","_cubeDirections","_cubeUps","PointLight","isPointLight","OrthographicCamera","isOrthographicCamera","scaleW","scaleH","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","isDirectionalLight","AmbientLight","isAmbientLight","RectAreaLight","isRectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","coefficients","zero","getAt","coeff","getIrradianceAt","sh","addScaledSH","getBasisAt","shBasis","LightProbe","isLightProbe","MaterialLoader","getTexture","createMaterialFromType","uniform","setTextures","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","replace","InstancedBufferGeometry","isInstancedBufferGeometry","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","drawcalls","offsets","ObjectLoader","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","bindLightTargets","hasImages","parseImagesAsync","bufferGeometryLoader","deserializeImage","loadImage","imageArray","deserializedImage","async","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ArrayCamera","isArrayCamera","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_trackRe","_supportedObjectNames","PropertyBinding","rootNode","parsedPath","parseTrackName","node","findNode","nodeName","getValue","_getValue_unbound","setValue","_setValue_unbound","create","root","isAnimationObjectGroup","Composite","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","targetGroup","optionalParsedPath","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","binding","bindings","InstancedInterleavedBuffer","isInstancedInterleavedBuffer","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","objects","propagate","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Controls","domElement","state","mouseButtons","touches","ONE","TWO","connect","disconnect","getByteLength","typeByteLength","getTextureTypeByteLength","revision","window","__THREE__"],"sourceRoot":""}