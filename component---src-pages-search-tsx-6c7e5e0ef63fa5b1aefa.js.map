{"version":3,"file":"component---src-pages-search-tsx-6c7e5e0ef63fa5b1aefa.js","mappings":"sRAIA,MAJkBA,IAAqC,IAApC,OAAEC,GAA4BD,EAC/C,OAAOE,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAIF,EAAO,WAAU,E,6BCgD9B,MAZyBG,IAA8C,IAA7C,aAAEC,EAAY,cAAEC,GAAuBF,EAC/D,MAAM,MAAEG,IAAUC,EAAAA,EAAAA,MAEZC,EA5BOT,KAAqD,IAApD,MAAEO,EAAK,cAAED,EAAa,aAAED,GAAsBL,EAC5D,OAAIM,EACKC,EAAMG,QACXC,IAKO,IAJLC,MACEC,aAAa,MAAEC,GAAO,KACtBC,IAEHJ,EACC,MAAMK,EAAWF,EAAMG,cAAcC,SAASZ,EAAcW,eAEtDE,EAAaJ,aAAI,EAAJA,EAAME,cAAcC,SAASZ,EAAcW,eAE9D,MAAqB,UAAjBZ,EAAiCW,EAEhB,YAAjBX,EAAmCc,EAEhCH,GAAYG,CAAU,IAK5BZ,CAAK,EAMUG,CAAO,CAC3BH,QACAF,eACAC,kBAGF,OAAOG,CAAa,E,6BCEtB,MApCqBT,IAId,IAJe,cACpBoB,GAGDpB,EACC,MAAMS,EAAgBY,EAAiB,CACrChB,aAAce,aAAa,EAAbA,EAAef,aAC7BC,cAAec,aAAa,EAAbA,EAAed,iBAG1B,OAAEgB,EAAM,SAAEC,IAAaC,EAAAA,EAAAA,GAAYf,GAEzC,OACEP,EAAAA,EAAAA,MAACuB,EAAS,CAAAtB,SAAA,EACRD,EAAAA,EAAAA,MAACwB,EAAK,CAAAvB,SAAA,CAAC,kBACSwB,EAAAA,EAAAA,KAAA,UAAAxB,SAASiB,aAAa,EAAbA,EAAed,mBAEd,IAAzBG,EAAcmB,QACbD,EAAAA,EAAAA,KAACE,EAAS,CAAC5B,OAAO,WAElBQ,EAAcqB,MAAM,EAAGR,GAAQS,KAC7BpB,IAAA,IACEC,MAAM,GACJoB,EACAnB,aAAa,QAAEoB,EAAO,MAAEnB,GACxBoB,QAAQ,KAAEC,KAEbxB,EAAA,OAAKgB,EAAAA,EAAAA,KAACS,EAAAA,EAAI,CAAUC,KAAMF,EAAMF,QAASA,EAASnB,MAAOA,GAAzCkB,EAAkD,KAGvEL,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAACC,KAAMhB,KAChBI,EAAAA,EAAAA,KAACa,EAAAA,EAAW,MACF,EAMhB,MAAMf,EAAYgB,EAAAA,QAAOC,GAAEC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAATJ,CAAS,+CACvBK,EAAAA,IAQEpB,EAAQe,EAAAA,QAAOM,IAAGJ,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAVJ,CAAU,uJAWpBO,EAAAA,EAAOC,Q,cC5DX,EAAejD,IAAA,IAAC,SAAEkD,GAA2BlD,EAAA,OAC3C2B,EAAAA,EAAAA,KAACwB,EAAAA,EAAe,CAAAhD,UACdwB,EAAAA,EAAAA,KAACyB,EAAY,CAAChC,cAAe8B,EAASG,SAEzC,EAEM,MAAMC,EAAOA,KAClB,MAAM,MAAExC,EAAK,YAAEyC,EAAW,MAAEC,EAAK,QAAEC,EAAO,gBAAEC,IAAoBC,EAAAA,EAAAA,KAEhE,OACEhC,EAAAA,EAAAA,KAACiC,EAAAA,EAAG,CACF9C,MAAOA,EACP+C,SAAS,KACTN,YAAaA,EACbC,MAAOA,EACPM,IAAKL,EACLC,gBAAiBA,GACjB,C","sources":["webpack://gatsby-starter-blog-github-theme/./src/components/NoContent.tsx","webpack://gatsby-starter-blog-github-theme/./src/hooks/useFilteredPosts.ts","webpack://gatsby-starter-blog-github-theme/./src/containers/SearchResult.tsx","webpack://gatsby-starter-blog-github-theme/./src/pages/search.tsx"],"sourcesContent":["const NoContent = ({ prefix }: { prefix: string }) => {\n  return <p>{prefix} 없습니다.</p>;\n};\n\nexport default NoContent;\n","import { useContext } from '../store/context';\nimport { Posts } from '../store/types';\n\ninterface Params {\n  searchFilter?: string;\n  searchKeyword?: string;\n}\n\ninterface Filter extends Params {\n  posts: Posts;\n}\n\nconst filter = ({ posts, searchKeyword, searchFilter }: Filter) => {\n  if (searchKeyword) {\n    return posts.filter(\n      ({\n        node: {\n          frontmatter: { title },\n          html\n        }\n      }) => {\n        const hasTitle = title.toLowerCase().includes(searchKeyword.toLowerCase());\n\n        const hasContent = html?.toLowerCase().includes(searchKeyword.toLowerCase());\n\n        if (searchFilter === 'title') return hasTitle;\n\n        if (searchFilter === 'content') return hasContent;\n\n        return hasTitle || hasContent;\n      }\n    );\n  }\n\n  return posts;\n};\n\nconst useFilteredPosts = ({ searchFilter, searchKeyword }: Params) => {\n  const { posts } = useContext();\n\n  const filteredPosts = filter({\n    posts,\n    searchFilter,\n    searchKeyword\n  });\n\n  return filteredPosts;\n};\n\nexport default useFilteredPosts;\n","import styled from 'styled-components';\n\nimport LoadMore from '../components/LoadMore';\nimport NoContent from '../components/NoContent';\nimport Post from '../components/Post';\nimport ScrollToTop from '../components/ScrollToTop';\nimport useFilteredPosts from '../hooks/useFilteredPosts';\nimport useLoadMore from '../hooks/useLoadMore';\nimport { SearchPageProps } from '../pages/search';\nimport { border } from '../styles/mixins';\nimport { previews } from '../styles/modules';\n\nconst SearchResult = ({\n  locationState\n}: {\n  locationState: SearchPageProps['location']['state'];\n}) => {\n  const filteredPosts = useFilteredPosts({\n    searchFilter: locationState?.searchFilter,\n    searchKeyword: locationState?.searchKeyword\n  });\n\n  const { offset, loadMore } = useLoadMore(filteredPosts);\n\n  return (\n    <Container>\n      <Title>\n        SEARCHING FOR <strong>{locationState?.searchKeyword}</strong>\n      </Title>\n      {filteredPosts.length === 0 ? (\n        <NoContent prefix=\"검색 결과가\" />\n      ) : (\n        filteredPosts.slice(0, offset).map(\n          ({\n            node: {\n              id,\n              frontmatter: { updated, title },\n              fields: { slug }\n            }\n          }) => <Post key={id} path={slug} updated={updated} title={title} />\n        )\n      )}\n      <LoadMore load={loadMore} />\n      <ScrollToTop />\n    </Container>\n  );\n};\n\nexport default SearchResult;\n\nconst Container = styled.ul`\n  ${previews};\n\n  & > p {\n    font-size: 24px;\n    font-weight: 600;\n  }\n`;\n\nconst Title = styled.div`\n  font-family: 'Sora', 'Open Sans', 'Helvetica Neue', sans-serif;\n  font-weight: 600;\n  font-size: 32px;\n  width: 100%;\n  text-align: end;\n\n  & > strong {\n    color: #bd4a55;\n  }\n\n  ${border.bottom};\n`;\n","import { PageProps } from 'gatsby';\n\nimport SEO from '../components/SEO';\nimport SidebarProvider from '../components/SidebarProvider';\nimport SearchResult from '../containers/SearchResult';\nimport { useSiteMetadata } from '../hooks/useSiteMetadata';\n\nexport type SearchPageProps = PageProps<object, object, Record<string, string>>;\n\n// eslint-disable-next-line react/display-name\nexport default ({ location }: SearchPageProps) => (\n  <SidebarProvider>\n    <SearchResult locationState={location.state} />\n  </SidebarProvider>\n);\n\nexport const Head = () => {\n  const { title, description, image, siteUrl, twitterUsername } = useSiteMetadata();\n\n  return (\n    <SEO\n      title={title}\n      subtitle=\"검색\"\n      description={description}\n      image={image}\n      url={siteUrl}\n      twitterUsername={twitterUsername}\n    />\n  );\n};\n"],"names":["_ref","prefix","_jsxs","children","_ref3","searchFilter","searchKeyword","posts","useContext","filteredPosts","filter","_ref2","node","frontmatter","title","html","hasTitle","toLowerCase","includes","hasContent","locationState","useFilteredPosts","offset","loadMore","useLoadMore","Container","Title","_jsx","length","NoContent","slice","map","id","updated","fields","slug","Post","path","LoadMore","load","ScrollToTop","styled","ul","withConfig","displayName","componentId","previews","div","border","bottom","location","SidebarProvider","SearchResult","state","Head","description","image","siteUrl","twitterUsername","useSiteMetadata","SEO","subtitle","url"],"sourceRoot":""}