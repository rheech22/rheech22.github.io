{"version":3,"file":"component---src-pages-search-tsx-950e809d795a3ab6588f.js","mappings":"4QAUA,MAVmBA,IACjBC,EAAAA,EAAAA,KAAA,OAAKC,MAAM,OAAOC,OAAO,OAAOC,QAAQ,YAAYC,MAAM,gCAAiCL,EAAKM,UAC9FL,EAAAA,EAAAA,KAAA,QACEM,KAAK,OACLC,OAAO,OACPC,YAAa,mBACbC,EAAE,2M,UCFR,MAJkBC,IAAqC,IAApC,OAAEC,GAA4BD,EAC/C,OAAOE,EAAAA,EAAAA,MAAA,KAAAP,SAAA,CAAIM,EAAO,WAAU,E,6BCgD9B,MAZyBE,IAA8C,IAA7C,aAAEC,EAAY,cAAEC,GAAuBF,EAC/D,MAAM,MAAEG,IAAUC,EAAAA,EAAAA,MAEZC,EA5BOR,KAAqD,IAApD,MAAEM,EAAK,cAAED,EAAa,aAAED,GAAsBJ,EAC5D,OAAIK,EACKC,EAAMG,QACXC,IAKO,IAJLC,MACEC,aAAa,MAAEC,GAAO,KACtBC,IAEHJ,EACC,MAAMK,EAAWF,EAAMG,cAAcC,SAASZ,EAAcW,eAEtDE,EAAaJ,aAAI,EAAJA,EAAME,cAAcC,SAASZ,EAAcW,eAE9D,MAAqB,UAAjBZ,EAAiCW,EAEhB,YAAjBX,EAAmCc,EAEhCH,GAAYG,CAAU,IAK5BZ,CAAK,EAMUG,CAAO,CAC3BH,QACAF,eACAC,kBAGF,OAAOG,CAAa,E,uCCKtB,MArCqBR,IAId,IAJe,cACpBmB,GAGDnB,EACC,MAAMQ,EAAgBY,EAAiB,CACrChB,aAAce,aAAa,EAAbA,EAAef,aAC7BC,cAAec,aAAa,EAAbA,EAAed,iBAG1B,OAAEgB,EAAM,SAAEC,IAAaC,EAAAA,EAAAA,GAAYf,GAEzC,OACEN,EAAAA,EAAAA,MAACsB,EAAS,CAAA7B,SAAA,EACRO,EAAAA,EAAAA,MAAA,OAAAP,SAAA,EACEL,EAAAA,EAAAA,KAACmC,EAAS,KACVnC,EAAAA,EAAAA,KAAA,QAAAK,SAAOwB,aAAa,EAAbA,EAAed,mBAEE,IAAzBG,EAAckB,QACbpC,EAAAA,EAAAA,KAACqC,EAAS,CAAC1B,OAAO,WAElBO,EAAcoB,MAAM,EAAGP,GAAQQ,KAC7BnB,IAAA,IACEC,MAAM,GACJmB,EACAlB,aAAa,QAAEmB,EAAO,MAAElB,GACxBmB,QAAQ,KAAEC,KAEbvB,EAAA,OAAKpB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAI,CAAUC,KAAMF,EAAMF,QAASA,EAASlB,MAAOA,GAAzCiB,EAAkD,KAGvExC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAQ,CAACC,KAAMf,KAChBhC,EAAAA,EAAAA,KAACgD,EAAAA,EAAW,MACF,EAMhB,MAAMd,EAAYe,EAAAA,QAAOC,GAAEC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAATJ,CAAS,mMAErBK,EAAAA,EAAAA,GAAK,CAAEC,WAAY,YAcP1C,IAAA,IAAC,MAAE2C,GAAO3C,EAAA,OAAK2C,EAAMC,IAAI,GAK9BC,EAAAA,EAAOC,iBAKhBC,EAAAA,I,cCrEJ,EAAelD,IAAA,IAAC,SAAEmD,GAA2BnD,EAAA,OAC3CV,EAAAA,EAAAA,KAAC8D,EAAAA,EAAe,CAAAzD,UACdL,EAAAA,EAAAA,KAAC+D,EAAY,CAAClC,cAAegC,EAASG,SAEzC,EAEM,MAAMC,EAAOA,KAClB,MAAM,MAAE1C,EAAK,YAAE2C,EAAW,MAAEC,EAAK,QAAEC,EAAO,gBAAEC,IAAoBC,EAAAA,EAAAA,KAEhE,OACEtE,EAAAA,EAAAA,KAACuE,EAAAA,EAAG,CACFhD,MAAOA,EACPiD,SAAS,KACTN,YAAaA,EACbC,MAAOA,EACPM,IAAKL,EACLC,gBAAiBA,GACjB,C","sources":["webpack://gatsby-starter-blog-github-theme/./src/assets/icons/BigSearch.tsx","webpack://gatsby-starter-blog-github-theme/./src/components/NoContent.tsx","webpack://gatsby-starter-blog-github-theme/./src/hooks/useFilteredPosts.ts","webpack://gatsby-starter-blog-github-theme/./src/containers/SearchResult.tsx","webpack://gatsby-starter-blog-github-theme/./src/pages/search.tsx"],"sourcesContent":["const BigSearch = (props: any) => (\n  <svg width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path\n      fill=\"none\"\n      stroke=\"#000\"\n      strokeWidth={2.6666666666666665}\n      d=\"M20 20L29.333 29.333L20 20ZM12.667 22.667C18.19 22.667 22.667 18.19 22.667 12.667C22.667 7.144 18.19 2.667 12.667 2.667C7.144 2.667 2.667 7.144 2.667 12.667C2.667 18.19 7.144 22.667 12.667 22.667Z\"\n    />\n  </svg>\n);\nexport default BigSearch;\n","const NoContent = ({ prefix }: { prefix: string }) => {\n  return <p>{prefix} 없습니다.</p>;\n};\n\nexport default NoContent;\n","import { useContext } from '../store/context';\nimport { Posts } from '../store/types';\n\ninterface Params {\n  searchFilter?: string;\n  searchKeyword?: string;\n}\n\ninterface Filter extends Params {\n  posts: Posts;\n}\n\nconst filter = ({ posts, searchKeyword, searchFilter }: Filter) => {\n  if (searchKeyword) {\n    return posts.filter(\n      ({\n        node: {\n          frontmatter: { title },\n          html\n        }\n      }) => {\n        const hasTitle = title.toLowerCase().includes(searchKeyword.toLowerCase());\n\n        const hasContent = html?.toLowerCase().includes(searchKeyword.toLowerCase());\n\n        if (searchFilter === 'title') return hasTitle;\n\n        if (searchFilter === 'content') return hasContent;\n\n        return hasTitle || hasContent;\n      }\n    );\n  }\n\n  return posts;\n};\n\nconst useFilteredPosts = ({ searchFilter, searchKeyword }: Params) => {\n  const { posts } = useContext();\n\n  const filteredPosts = filter({\n    posts,\n    searchFilter,\n    searchKeyword\n  });\n\n  return filteredPosts;\n};\n\nexport default useFilteredPosts;\n","import styled from 'styled-components';\n\nimport BigSearch from '../assets/icons/BigSearch';\nimport LoadMore from '../components/LoadMore';\nimport NoContent from '../components/NoContent';\nimport Post from '../components/Post';\nimport ScrollToTop from '../components/ScrollToTop';\nimport useFilteredPosts from '../hooks/useFilteredPosts';\nimport useLoadMore from '../hooks/useLoadMore';\nimport { SearchPageProps } from '../pages/search';\nimport { device } from '../styles/breakpoints';\nimport { flex } from '../styles/mixins';\nimport { previews } from '../styles/modules';\n\nconst SearchResult = ({\n  locationState\n}: {\n  locationState: SearchPageProps['location']['state'];\n}) => {\n  const filteredPosts = useFilteredPosts({\n    searchFilter: locationState?.searchFilter,\n    searchKeyword: locationState?.searchKeyword\n  });\n\n  const { offset, loadMore } = useLoadMore(filteredPosts);\n\n  return (\n    <Container>\n      <div>\n        <BigSearch />\n        <span>{locationState?.searchKeyword}</span>\n      </div>\n      {filteredPosts.length === 0 ? (\n        <NoContent prefix=\"검색 결과가\" />\n      ) : (\n        filteredPosts.slice(0, offset).map(\n          ({\n            node: {\n              id,\n              frontmatter: { updated, title },\n              fields: { slug }\n            }\n          }) => <Post key={id} path={slug} updated={updated} title={title} />\n        )\n      )}\n      <LoadMore load={loadMore} />\n      <ScrollToTop />\n    </Container>\n  );\n};\n\nexport default SearchResult;\n\nconst Container = styled.ul`\n  & > div {\n    ${flex({ alignItems: 'center' })};\n    margin: 30px 0;\n    font-size: 28.8px;\n\n    span {\n      margin-left: 8px;\n      height: 100%;\n    }\n\n    svg {\n      height: 32px;\n      width: 32px;\n      path {\n        fill: transparent;\n        stroke: ${({ theme }) => theme.mute};\n        transition: all 0.5s;\n      }\n    }\n\n    @media ${device.widerThanLaptopS} {\n      margin-top: 0;\n    }\n  }\n\n  ${previews};\n`;\n","import { PageProps } from 'gatsby';\n\nimport SEO from '../components/SEO';\nimport SidebarProvider from '../components/SidebarProvider';\nimport SearchResult from '../containers/SearchResult';\nimport { useSiteMetadata } from '../hooks/useSiteMetadata';\n\nexport type SearchPageProps = PageProps<object, object, Record<string, string>>;\n\n// eslint-disable-next-line react/display-name\nexport default ({ location }: SearchPageProps) => (\n  <SidebarProvider>\n    <SearchResult locationState={location.state} />\n  </SidebarProvider>\n);\n\nexport const Head = () => {\n  const { title, description, image, siteUrl, twitterUsername } = useSiteMetadata();\n\n  return (\n    <SEO\n      title={title}\n      subtitle=\"검색\"\n      description={description}\n      image={image}\n      url={siteUrl}\n      twitterUsername={twitterUsername}\n    />\n  );\n};\n"],"names":["props","_jsx","width","height","viewBox","xmlns","children","fill","stroke","strokeWidth","d","_ref","prefix","_jsxs","_ref3","searchFilter","searchKeyword","posts","useContext","filteredPosts","filter","_ref2","node","frontmatter","title","html","hasTitle","toLowerCase","includes","hasContent","locationState","useFilteredPosts","offset","loadMore","useLoadMore","Container","BigSearch","length","NoContent","slice","map","id","updated","fields","slug","Post","path","LoadMore","load","ScrollToTop","styled","ul","withConfig","displayName","componentId","flex","alignItems","theme","mute","device","widerThanLaptopS","previews","location","SidebarProvider","SearchResult","state","Head","description","image","siteUrl","twitterUsername","useSiteMetadata","SEO","subtitle","url"],"sourceRoot":""}