{"version":3,"file":"component---src-pages-search-tsx-42646034c689c0a059e3.js","mappings":"6NAsDA,EA5CyB,SAAC,GAA0D,IAAxDA,EAAuD,EAAvDA,OAAQC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,IACvDC,GAAUC,EAAAA,EAAAA,MAAVD,MAER,GAA4CE,EAAAA,EAAAA,UAASF,GAA7CG,EAAR,KAAuBC,EAAvB,KAsCA,OANAC,EAAAA,EAAAA,YAAU,WACR,IAAMF,EA9BFL,EACKE,EACJM,QAAO,YAAqC,IAAD,MAAjCC,KAAQC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,KACxBC,EAAWF,SAAH,UAAGA,EAAaG,aAAhB,aAAGC,EAAoBC,cAClCC,SAAShB,EAAce,eACpBE,EAAaN,aAAH,EAAGA,EAAMI,cACtBC,SAAShB,EAAce,eAE1B,MAAqB,UAAjBhB,EAAiCa,EAChB,YAAjBb,EAAmCkB,EAE/BL,GAAYK,CAVjB,IAcLhB,EACKC,EACJM,QAAO,kBAAWE,EAAX,EAAGD,KAAQC,YAAX,OACNA,SADM,QAAC,EACPA,EAAaQ,YADP,aACNC,EAAmBH,SAASf,EAAIc,cAF7B,IAKLjB,EACKI,EACJM,QAAO,gBAAWE,EAAX,EAAGD,KAAQC,YAAX,OAA+BA,aAAAA,EAAAA,EAAaZ,UAAWA,CAD1D,IAIFI,EAMPI,EAAiBD,EAHV,GAIN,CAAEH,EAAOD,EAAKH,EAAQE,EAAeD,IAEjCM,CAzCT,E,8BCJA,EANkB,SAAC,GAAmC,IAAjCe,EAAgC,EAAhCA,OACnB,OACEC,EAAAA,EAAAA,MAAAA,IAAAA,CAAAA,SAAAA,CAAID,EAAJ,WAFJ,E,mBC6CA,EAhCqB,SAAC,GAA8E,IAA5EE,EAA2E,EAA3EA,cAChBjB,EAAgBkB,EAAiB,CACrCtB,IAAKqB,aAAF,EAAEA,EAAerB,IACpBH,OAAQwB,aAAF,EAAEA,EAAexB,OACvBC,aAAcuB,aAAF,EAAEA,EAAevB,aAC7BC,cAAesB,aAAF,EAAEA,EAAetB,gBAGhC,GAA6BwB,EAAAA,EAAAA,GAAYnB,GAAjCoB,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAEhB,OACEL,EAAAA,EAAAA,MAACM,EAAD,WAC4B,IAAzBtB,EAAcuB,QACXC,EAAAA,EAAAA,KAACC,EAAD,CAAWV,OAAO,WAClBf,EACC0B,MAAM,EAAGN,GACTO,KAAI,wBAASC,EAAT,EAAGxB,KAAH,OACHoB,EAAAA,EAAAA,KAACK,EAAAA,EAAD,CAEEC,KAAI,UAAEF,EAAKvB,mBAAP,aAAE0B,EAAkBD,KACxBE,KAAI,UAAEJ,EAAKvB,mBAAP,aAAE4B,EAAkBD,KACxBxB,MAAK,UAAEoB,EAAKvB,mBAAP,aAAE6B,EAAkB1B,MACzBK,KAAI,UAAEe,EAAKvB,mBAAP,aAAE8B,EAAkBtB,KACxBuB,QAASR,EAAKQ,SALTR,EAAKS,GAJd,KAYJb,EAAAA,EAAAA,KAACc,EAAAA,EAAD,CAAUC,KAAMlB,KAChBG,EAAAA,EAAAA,KAACgB,EAAAA,EAAD,MA3BN,EAkCMlB,EAAYmB,EAAAA,QAAAA,GAAAA,WAAH,kEAAGA,CAAH,QACXC,EAAAA,I,oBCvCJ,WAAe,GAAmC,IAAhCC,EAAgC,EAAhCA,SAChB,OACEnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAD,CAAAC,UACErB,EAAAA,EAAAA,KAACsB,EAAD,CAAc7B,cAAiB0B,EAASI,SAH9C,EAQaC,EAAO,kBAClBxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAD,CAAKC,SAAS,MADT,C","sources":["webpack://rheechlog/./src/hooks/useFilteredPosts.ts","webpack://rheechlog/./src/components/NoContent.tsx","webpack://rheechlog/./src/containers/SearchResult.tsx","webpack://rheechlog/./src/pages/search.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useContext } from '../store/context';\n\ninterface Params {\n  series?: string;\n  searchFilter?: string;\n  searchKeyword?: string;\n  tag?: string;\n}\n\nconst useFilteredPosts = ({ series, searchFilter, searchKeyword, tag }: Params) => {\n  const { posts } = useContext();\n\n  const [ filteredPosts, setFilteredPosts ] = useState(posts);\n\n  const getPosts = () => {\n    if (searchKeyword) {\n      return posts\n        .filter(({ node: { frontmatter, html } })=> {\n          const hasTitle = frontmatter?.title?.toLowerCase()\n            .includes(searchKeyword.toLowerCase());\n          const hasContent = html?.toLowerCase()\n            .includes(searchKeyword.toLowerCase());\n\n          if (searchFilter === 'title') return hasTitle;\n          if (searchFilter === 'content') return hasContent;\n\n          return (hasTitle || hasContent);\n        });\n    }\n\n    if (tag) {\n      return posts\n        .filter(({ node: { frontmatter } })=>\n          frontmatter?.tags?.includes(tag.toLowerCase()));\n    }\n\n    if (series) {\n      return posts\n        .filter(({ node: { frontmatter } }) => frontmatter?.series === series);\n    }\n\n    return posts;\n  };\n\n  useEffect(()=> {\n    const filteredPosts = getPosts();\n\n    setFilteredPosts(filteredPosts);\n  }, [ posts, tag, series, searchKeyword, searchFilter ]);\n\n  return filteredPosts;\n};\n\nexport default useFilteredPosts;\n","const NoContent = ({ prefix } : {prefix: string}) => {\n  return (\n    <p>{prefix} 없습니다.</p>\n  );\n};\n\nexport default NoContent;\n","import styled from 'styled-components';\nimport { previews } from '../styles/modules';\n\nimport useFilteredPosts from '../hooks/useFilteredPosts';\nimport useLoadMore from '../hooks/useLoadMore';\n\nimport PostPreview from '../components/PostPreview';\nimport NoContent from '../components/NoContent';\nimport LoadMore from '../components/LoadMore';\nimport ScrollToTop from '../components/ScrollToTop';\n\nimport { SearchPageProps } from '../pages/search';\n\nconst SearchResult = ({ locationState }: {locationState: SearchPageProps['location']['state']}) => {\n  const filteredPosts = useFilteredPosts({\n    tag: locationState?.tag,\n    series: locationState?.series,\n    searchFilter: locationState?.searchFilter,\n    searchKeyword: locationState?.searchKeyword,\n  });\n\n  const { offset, loadMore } = useLoadMore(filteredPosts);\n\n  return (\n    <Container>\n      {filteredPosts.length === 0\n        ? <NoContent prefix=\"검색 결과가\"/>\n        : filteredPosts\n          .slice(0, offset)\n          .map(({ node: post }) =>\n            <PostPreview\n              key={post.id}\n              path={post.frontmatter?.path}\n              date={post.frontmatter?.date}\n              title={post.frontmatter?.title}\n              tags={post.frontmatter?.tags}\n              excerpt={post.excerpt}\n            />\n          )}\n      <LoadMore load={loadMore}/>\n      <ScrollToTop />\n    </Container>\n  );\n};\n\nexport default SearchResult;\n\nconst Container = styled.ul`\n  ${previews}\n`;\n","import { PageProps } from 'gatsby';\n\nimport SearchResult from '../containers/SearchResult';\n\nimport SidebarProvider from '../components/SidebarProvider';\nimport SEO from '../components/SEO';\n\nexport type SearchPageProps = PageProps<object, object, Record<string, string>>;\n\nexport default ({ location }: SearchPageProps) => {\n  return (\n    <SidebarProvider>\n      <SearchResult locationState = {location.state}/>\n    </SidebarProvider>\n  );\n};\n\nexport const Head = () => (\n  <SEO subTitle=\"검색\" />\n);\n"],"names":["series","searchFilter","searchKeyword","tag","posts","useContext","useState","filteredPosts","setFilteredPosts","useEffect","filter","node","frontmatter","html","hasTitle","title","_frontmatter$title","toLowerCase","includes","hasContent","tags","_frontmatter$tags","prefix","_jsxs","locationState","useFilteredPosts","useLoadMore","offset","loadMore","Container","length","_jsx","NoContent","slice","map","post","PostPreview","path","_post$frontmatter","date","_post$frontmatter2","_post$frontmatter3","_post$frontmatter4","excerpt","id","LoadMore","load","ScrollToTop","styled","previews","location","SidebarProvider","children","SearchResult","state","Head","SEO","subTitle"],"sourceRoot":""}