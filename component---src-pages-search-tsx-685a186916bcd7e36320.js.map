{"version":3,"file":"component---src-pages-search-tsx-685a186916bcd7e36320.js","mappings":"qRAgBA,EAhBkB,SAACA,GAAD,OAChBC,EAAAA,EAAAA,KAAAA,MAAAA,OAAAA,OAAAA,CACEC,MAAM,OACNC,OAAO,OACPC,QAAQ,YACRC,MAAM,8BACFL,EALN,WAOEC,EAAAA,EAAAA,KAAAA,OAAAA,CACEK,KAAK,OACLC,OAAO,OACPC,YAAa,mBACbC,EAAE,2MAZR,ECuBA,EAvBe,SAACT,GAAD,OACbC,EAAAA,EAAAA,KAAAA,MAAAA,OAAAA,OAAAA,CACES,GAAG,SACHL,MAAM,6BACNM,WAAW,+BACXC,EAAE,MACFC,EAAE,MACFT,QAAQ,YACRU,MAAO,CACLC,iBAAkB,2BAEpBC,SAAS,WACTd,MAAO,GACPC,OAAQ,IACJH,EAbN,WAeEiB,EAAAA,EAAAA,MAAAA,IAAAA,CAAAA,SAAAA,EACEhB,EAAAA,EAAAA,KAAAA,OAAAA,CAAMQ,EAAE,ibACRR,EAAAA,EAAAA,KAAAA,OAAAA,CAAMQ,EAAE,6OAlBd,E,oBC6DA,EAnDyB,SAAC,GAA0D,IAAxDS,EAAuD,EAAvDA,OAAQC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,IACzDC,GAAWC,EAAAA,EAAAA,MAETC,GAAUC,EAAAA,EAAAA,MAAVD,MAER,GAA4CE,EAAAA,EAAAA,UAASF,GAA7CG,EAAR,KAAuBC,EAAvB,KA2CA,OANAC,EAAAA,EAAAA,kBAAgB,WACd,IAAMF,EAnCFP,EACKI,EACJM,QAAO,YAAiD,IAAD,IAA7CC,KAAuBC,EAAsB,EAArCC,YAAeD,MAASE,EAAa,EAAbA,KACnCC,EAAWH,EAAMI,cACpBC,SAASjB,EAAcgB,eACpBE,EAAaJ,aAAH,EAAGA,EAAME,cACtBC,SAASjB,EAAcgB,eAE1B,MAAqB,UAAjBjB,EAAiCgB,EAChB,YAAjBhB,EAAmCmB,EAE/BH,GAAYG,CAVjB,IAcLjB,GACFC,EAAS,CAAEiB,KAAM,gBAAiBC,QAAS,CAAEnB,IAAKA,EAAIe,iBAE/CZ,EACJM,QAAO,YAA0C,IAAhBW,EAAe,EAAtCV,KAAQE,YAAeQ,KAChC,OAAOA,aAAP,EAAOA,EAAMC,MAAK,SAAAC,GAAC,OAAIA,aAAAA,EAAAA,EAAGP,iBAAkBf,EAAIe,aAAzC,GAFJ,KAMLlB,GACFI,EAAS,CAAEiB,KAAM,mBAAoBC,QAAS,CAAEtB,OAAAA,KAEzCM,EACJM,QAAO,qBAAGC,KAAQE,YAAgCf,SAAWA,CADzD,KAIFM,EAMPI,EAAiBD,EAHJ,GAIZ,CAAEH,EAAOH,EAAKH,EAAQE,EAAeD,IAEjCQ,CAhDT,E,mBCJA,EANkB,SAAC,GAAmC,IAAjCiB,EAAgC,EAAhCA,OACnB,OACE3B,EAAAA,EAAAA,MAAAA,IAAAA,CAAAA,SAAAA,CAAI2B,EAAJ,WAFJ,E,oBCiBMC,EAA8C,CAClD,IAAO,IACP,QAAU5C,EAAAA,EAAAA,KAAC6C,EAAD,IACV,eAAiB7C,EAAAA,EAAAA,KAAC8C,EAAD,KA+CnB,EA5CqB,SAAC,GAA8E,IAAD,EAA3EC,EAA2E,EAA3EA,cAChBrB,EAAgBsB,EAAiB,CACrC5B,IAAK2B,aAAF,EAAEA,EAAe3B,IACpBH,OAAQ8B,aAAF,EAAEA,EAAe9B,OACvBC,aAAc6B,aAAF,EAAEA,EAAe7B,aAC7BC,cAAe4B,aAAF,EAAEA,EAAe5B,gBAGhC,GAA6B8B,EAAAA,EAAAA,GAAYvB,GAAjCwB,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAEhB,YAA0BC,OAAOC,QAAQN,QAAAA,EAAiB,CAAC,GAAG,UAA9D,QAAoE,CAAE,GAAI,IAAlElB,EAAR,KAAgByB,EAAhB,KAEA,OACEtC,EAAAA,EAAAA,MAACuC,EAAD,YACEvC,EAAAA,EAAAA,MAAAA,MAAAA,CAAAA,SAAAA,CAAM4B,EAAMf,IAAQ7B,EAAAA,EAAAA,KAAAA,OAAAA,CAAAA,SAAOsD,OACD,IAAzB5B,EAAc8B,QACXxD,EAAAA,EAAAA,KAACyD,EAAD,CAAWd,OAAO,WAClBjB,EACCgC,MAAM,EAAGR,GACTS,KAAI,oBAAG7B,KACNrB,EADG,EACHA,GACAmD,EAFG,EAEHA,QAFG,IAGH5B,YACE6B,EAJC,EAIDA,KACAC,EALC,EAKDA,KACA/B,EANC,EAMDA,MACAS,EAPC,EAODA,KAPC,OAUHxC,EAAAA,EAAAA,KAAC+D,EAAAA,EAAD,CAEEF,KAAMA,EACNC,KAAMA,EACN/B,MAAOA,EACPS,KAAMA,QAAAA,EAAQ,GACdoB,QAASA,GALJnD,EAbT,KAqBJT,EAAAA,EAAAA,KAACgE,EAAAA,EAAD,CAAUC,KAAMd,KAChBnD,EAAAA,EAAAA,KAACkE,EAAAA,EAAD,MAvCN,EA8CMX,EAAYY,EAAAA,QAAAA,GAAAA,WAAH,kEAAGA,CAAH,kMAETC,EAAAA,EAAAA,GAAK,CAAEC,WAAY,YAcP,qBAAGC,MAAiBC,IAhBvB,GAqBFC,EAAAA,EAAAA,iBAKTC,EAAAA,I,oBCtFJ,WAAe,OAAGC,EAAH,EAAGA,SAAH,OACb1E,EAAAA,EAAAA,KAAC2E,EAAAA,EAAD,CAAAC,UACE5E,EAAAA,EAAAA,KAAC6E,EAAD,CAAc9B,cAAiB2B,EAASI,SAF5C,EAMaC,EAAO,kBAClB/E,EAAAA,EAAAA,KAACgF,EAAAA,EAAD,CAAKC,SAAS,MADT,C","sources":["webpack://gatsby-starter-blog-github-theme/./src/assets/icons/BigSearch.tsx","webpack://gatsby-starter-blog-github-theme/./src/assets/icons/Series.tsx","webpack://gatsby-starter-blog-github-theme/./src/hooks/useFilteredPosts.ts","webpack://gatsby-starter-blog-github-theme/./src/components/NoContent.tsx","webpack://gatsby-starter-blog-github-theme/./src/containers/SearchResult.tsx","webpack://gatsby-starter-blog-github-theme/./src/pages/search.tsx"],"sourcesContent":["const BigSearch = (props: any) => (\n  <svg\n    width=\"32px\"\n    height=\"32px\"\n    viewBox=\"0 0 32 32\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      fill=\"none\"\n      stroke=\"#000\"\n      strokeWidth={2.6666666666666665}\n      d=\"M20 20L29.333 29.333L20 20ZM12.667 22.667C18.19 22.667 22.667 18.19 22.667 12.667C22.667 7.144 18.19 2.667 12.667 2.667C7.144 2.667 2.667 7.144 2.667 12.667C2.667 18.19 7.144 22.667 12.667 22.667Z\"\n    />\n  </svg>\n);\nexport default BigSearch;\n","const Series = (props: any) => (\n  <svg\n    id=\"Capa_1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    x=\"0px\"\n    y=\"0px\"\n    viewBox=\"0 0 32 32\"\n    style={{\n      enableBackground: 'new 0 0 226.696 226.696',\n    }}\n    xmlSpace=\"preserve\"\n    width={32}\n    height={32}\n    {...props}\n  >\n    <g>\n      <path d=\"M27.854 3.386h-2.326V1.059c0 -0.311 -0.137 -0.607 -0.374 -0.808c-0.237 -0.201 -0.552 -0.288 -0.858 -0.236L3.972 3.401c-0.511 0.085 -0.885 0.527 -0.885 1.044v26.497c0 0.585 0.474 1.059 1.059 1.059h23.709c0.585 0 1.059 -0.474 1.059 -1.059V4.445C28.913 3.86 28.439 3.386 27.854 3.386zM5.204 5.342l18.207 -3.033v24.352L5.204 29.692V5.342zM26.796 29.883h-9.847l7.695 -1.281c0.511 -0.085 0.885 -0.527 0.885 -1.044V5.503h1.267V29.883z\" />\n      <path d=\"M19.614 7.058l-10.938 1.694c-0.578 0.089 -0.974 0.63 -0.884 1.208c0.081 0.523 0.532 0.897 1.045 0.897c0.054 0 0.109 -0.004 0.163 -0.013l10.937 -1.694c0.578 -0.089 0.974 -0.63 0.884 -1.208C20.733 7.365 20.192 6.969 19.614 7.058z\" />\n    </g>\n  </svg>\n);\n\nexport default Series;\n","import { useLayoutEffect, useState } from 'react';\nimport { useContext, useDispatch } from '../store/context';\n\ninterface Params {\n  series?: string;\n  searchFilter?: string;\n  searchKeyword?: string;\n  tag?: string;\n}\n\nconst useFilteredPosts = ({ series, searchFilter, searchKeyword, tag }: Params) => {\n  const dispatch = useDispatch();\n\n  const { posts } = useContext();\n\n  const [ filteredPosts, setFilteredPosts ] = useState(posts);\n\n  const getPosts = () => {\n    if (searchKeyword) {\n      return posts\n        .filter(({ node: { frontmatter: { title }, html } }) => {\n          const hasTitle = title.toLowerCase()\n            .includes(searchKeyword.toLowerCase());\n          const hasContent = html?.toLowerCase()\n            .includes(searchKeyword.toLowerCase());\n\n          if (searchFilter === 'title') return hasTitle;\n          if (searchFilter === 'content') return hasContent;\n\n          return (hasTitle || hasContent);\n        });\n    }\n\n    if (tag) {\n      dispatch({ type: 'setCurrentTag', payload: { tag: tag.toLowerCase() } });\n\n      return posts\n        .filter(({ node: { frontmatter: { tags } } }) => {\n          return tags?.some(t => t?.toLowerCase() === tag.toLowerCase());\n        });\n    }\n\n    if (series) {\n      dispatch({ type: 'setCurrentSeries', payload: { series } });\n\n      return posts\n        .filter(({ node: { frontmatter } }) => frontmatter.series === series);\n    }\n\n    return posts;\n  };\n\n  useLayoutEffect(() => {\n    const filteredPosts = getPosts();\n\n    setFilteredPosts(filteredPosts);\n  }, [ posts, tag, series, searchKeyword, searchFilter ]);\n\n  return filteredPosts;\n};\n\nexport default useFilteredPosts;\n","const NoContent = ({ prefix } : {prefix: string}) => {\n  return (\n    <p>{prefix} 없습니다.</p>\n  );\n};\n\nexport default NoContent;\n","import styled from 'styled-components';\nimport { previews } from '../styles/modules';\nimport { device } from '../styles/breakpoints';\nimport { flex } from '../styles/mixins';\nimport BigSearch from '../assets/icons/BigSearch';\nimport Series from '../assets/icons/Series';\n\nimport useFilteredPosts from '../hooks/useFilteredPosts';\nimport useLoadMore from '../hooks/useLoadMore';\n\nimport ScrollToTop from '../components/ScrollToTop';\nimport NoContent from '../components/NoContent';\nimport LoadMore from '../components/LoadMore';\nimport Post from '../components/Post';\n\nimport { SearchPageProps } from '../pages/search';\n\nconst ICONS: Record<string, JSX.Element | string> = {\n  'tag': '#',\n  'series': <Series/>,\n  'searchKeyword': <BigSearch/>,\n};\n\nconst SearchResult = ({ locationState }: {locationState: SearchPageProps['location']['state']}) => {\n  const filteredPosts = useFilteredPosts({\n    tag: locationState?.tag,\n    series: locationState?.series,\n    searchFilter: locationState?.searchFilter,\n    searchKeyword: locationState?.searchKeyword,\n  });\n\n  const { offset, loadMore } = useLoadMore(filteredPosts);\n\n  const [ filter, value ] = Object.entries(locationState ?? {})[0] ?? [ '', '' ];\n\n  return (\n    <Container>\n      <div>{ICONS[filter]}<span>{value}</span></div>\n      {filteredPosts.length === 0\n        ? <NoContent prefix=\"검색 결과가\"/>\n        : filteredPosts\n          .slice(0, offset)\n          .map(({ node: {\n            id,\n            excerpt,\n            frontmatter: {\n              path,\n              date,\n              title,\n              tags,\n            },\n          } }) =>\n            <Post\n              key={id}\n              path={path}\n              date={date}\n              title={title}\n              tags={tags ?? []}\n              excerpt={excerpt}\n            />\n          )}\n      <LoadMore load={loadMore}/>\n      <ScrollToTop />\n    </Container>\n  );\n};\n\nexport default SearchResult;\n\nconst Container = styled.ul`\n  & > div {\n    ${flex({ alignItems: 'center' })};\n    margin: 30px 0;\n    font-size: 28.8px;\n\n    span {\n      margin-left: 8px;\n      height: 100%;\n    }\n\n    svg {\n      height: 32px;\n      width: 32px;\n      path {\n        fill: transparent;\n        stroke: ${({ theme })=> theme.mute};\n        transition: all .5s;\n      }\n    }\n\n    @media ${device.widerThanLaptopS} {\n      margin-top: 0;\n    }\n  }\n  \n  ${previews};\n`;\n","import { PageProps } from 'gatsby';\n\nimport SearchResult from '../containers/SearchResult';\n\nimport SidebarProvider from '../components/SidebarProvider';\nimport SEO from '../components/SEO';\n\nexport type SearchPageProps = PageProps<object, object, Record<string, string>>;\n\nexport default ({ location }: SearchPageProps) => (\n  <SidebarProvider>\n    <SearchResult locationState = {location.state}/>\n  </SidebarProvider>\n);\n\nexport const Head = () => (\n  <SEO subTitle=\"검색\" />\n);\n"],"names":["props","_jsx","width","height","viewBox","xmlns","fill","stroke","strokeWidth","d","id","xmlnsXlink","x","y","style","enableBackground","xmlSpace","_jsxs","series","searchFilter","searchKeyword","tag","dispatch","useDispatch","posts","useContext","useState","filteredPosts","setFilteredPosts","useLayoutEffect","filter","node","title","frontmatter","html","hasTitle","toLowerCase","includes","hasContent","type","payload","tags","some","t","prefix","ICONS","Series","BigSearch","locationState","useFilteredPosts","useLoadMore","offset","loadMore","Object","entries","value","Container","length","NoContent","slice","map","excerpt","path","date","Post","LoadMore","load","ScrollToTop","styled","flex","alignItems","theme","mute","device","previews","location","SidebarProvider","children","SearchResult","state","Head","SEO","subTitle"],"sourceRoot":""}