{"componentChunkName":"component---src-templates-wiki-template-tsx","path":"/Dart/제네릭/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"dart의-제네릭\" style=\"position:relative;\">Dart의 제네릭<a href=\"#dart%EC%9D%98-%EC%A0%9C%EB%84%A4%EB%A6%AD\" aria-label=\"dart의 제네릭 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<h2 id=\"정의\" style=\"position:relative;\">정의<a href=\"#%EC%A0%95%EC%9D%98\" aria-label=\"정의 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ul>\n<li><strong>제네릭</strong>은 클래스, 메서드, 인터페이스 등을 다양한 데이터 타입과 함께 사용할 수 있도록 하는 프로그래밍 개념</li>\n<li><strong>타입 파라미터</strong>를 사용하여 코드의 재사용성을 높이고, 컴파일 시 타입 안정성을 보장함</li>\n</ul>\n<h2 id=\"목적\" style=\"position:relative;\">목적<a href=\"#%EB%AA%A9%EC%A0%81\" aria-label=\"목적 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ol>\n<li><strong>타입 안전성 강화</strong>\n<ul>\n<li>컴파일 시 타입 오류를 미리 잡아내어 런타임 오류를 줄임</li>\n</ul>\n</li>\n<li><strong>코드 재사용성 향상</strong>\n<ul>\n<li>다양한 데이터 타입에 대해 동일한 로직을 적용할 수 있음</li>\n</ul>\n</li>\n<li><strong>가독성 및 유지보수성 개선</strong>\n<ul>\n<li>코드의 의도를 명확히 하고, 중복 코드를 줄임</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"제네릭-클래스\" style=\"position:relative;\">제네릭 클래스<a href=\"#%EC%A0%9C%EB%84%A4%EB%A6%AD-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"제네릭 클래스 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<h3 id=\"기본-사용법\" style=\"position:relative;\">기본 사용법<a href=\"#%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"기본 사용법 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">class Box&lt;T&gt; {\n  T content;\n\n  Box(this.content);\n\n  void setContent(T content) {\n    this.content = content;\n  }\n\n  T getContent() {\n    return content;\n  }\n}\n\nvoid main() {\n  Box&lt;int&gt; intBox = Box&lt;int&gt;(123);\n  print(intBox.getContent()); // 출력: 123\n\n  Box&lt;String&gt; strBox = Box&lt;String&gt;(&#39;Hello&#39;);\n  print(strBox.getContent()); // 출력: Hello\n}</code>\n        </deckgo-highlight-code>\n<h3 id=\"타입-제한\" style=\"position:relative;\">타입 제한<a href=\"#%ED%83%80%EC%9E%85-%EC%A0%9C%ED%95%9C\" aria-label=\"타입 제한 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">class ComparableBox&lt;T extends Comparable&gt; {\n  T content;\n\n  ComparableBox(this.content);\n\n  bool isGreaterThan(T other) {\n    return content.compareTo(other) &gt; 0;\n  }\n}\n\nvoid main() {\n  ComparableBox&lt;int&gt; intBox = ComparableBox&lt;int&gt;(10);\n  print(intBox.isGreaterThan(5)); // 출력: true\n\n  ComparableBox&lt;String&gt; strBox = ComparableBox&lt;String&gt;(&#39;apple&#39;);\n  print(strBox.isGreaterThan(&#39;banana&#39;)); // 출력: false\n}</code>\n        </deckgo-highlight-code>\n<h2 id=\"제네릭-메서드\" style=\"position:relative;\">제네릭 메서드<a href=\"#%EC%A0%9C%EB%84%A4%EB%A6%AD-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"제네릭 메서드 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">class Util {\n  T getFirst&lt;T&gt;(List&lt;T&gt; items) {\n    return items.isNotEmpty ? items.first : throw Exception(&#39;리스트가 비어 있습니다.&#39;);\n  }\n}\n\nvoid main() {\n  Util util = Util();\n\n  int firstInt = util.getFirst&lt;int&gt;([1, 2, 3]);\n  print(firstInt); // 출력: 1\n\n  String firstStr = util.getFirst&lt;String&gt;([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]);\n  print(firstStr); // 출력: a\n}</code>\n        </deckgo-highlight-code>\n<h2 id=\"제네릭-함수\" style=\"position:relative;\">제네릭 함수<a href=\"#%EC%A0%9C%EB%84%A4%EB%A6%AD-%ED%95%A8%EC%88%98\" aria-label=\"제네릭 함수 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">T getMiddle&lt;T&gt;(List&lt;T&gt; items) {\n  if (items.isEmpty) throw Exception(&#39;리스트가 비어 있습니다.&#39;);\n  return items[items.length ~/ 2];\n}\n\nvoid main() {\n  double middleDouble = getMiddle&lt;double&gt;([1.1, 2.2, 3.3, 4.4, 5.5]);\n  print(middleDouble); // 출력: 3.3\n\n  String middleStr = getMiddle&lt;String&gt;([&#39;apple&#39;, &#39;banana&#39;, &#39;cherry&#39;]);\n  print(middleStr); // 출력: banana\n}</code>\n        </deckgo-highlight-code>\n<h2 id=\"다중-제네릭\" style=\"position:relative;\">다중 제네릭<a href=\"#%EB%8B%A4%EC%A4%91-%EC%A0%9C%EB%84%A4%EB%A6%AD\" aria-label=\"다중 제네릭 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">List&lt;T&gt; filter&lt;T&gt;(List&lt;T&gt; items, bool Function(T) test) {\n  List&lt;T&gt; result = [];\n  for (var item in items) {\n    if (test(item)) {\n      result.add(item);\n    }\n  }\n  return result;\n}\n\nvoid main() {\n  List&lt;int&gt; numbers = [1, 2, 3, 4, 5];\n  List&lt;int&gt; evenNumbers = filter&lt;int&gt;(numbers, (n) =&gt; n.isEven);\n  print(evenNumbers); // 출력: [2, 4]\n\n  List&lt;String&gt; fruits = [&#39;apple&#39;, &#39;banana&#39;, &#39;cherry&#39;];\n  List&lt;String&gt; longFruits = filter&lt;String&gt;(fruits, (f) =&gt; f.length &gt; 5);\n  print(longFruits); // 출력: [banana, cherry]\n}</code>\n        </deckgo-highlight-code>\n<h2 id=\"제네릭과-믹스인\" style=\"position:relative;\">제네릭과 믹스인<a href=\"#%EC%A0%9C%EB%84%A4%EB%A6%AD%EA%B3%BC-%EB%AF%B9%EC%8A%A4%EC%9D%B8\" aria-label=\"제네릭과 믹스인 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<deckgo-highlight-code language=\"dart\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">mixin Printable {\n  void printInfo();\n}\n\nclass Document&lt;T&gt; with Printable {\n  T content;\n\n  Document(this.content);\n\n  @override\n  void printInfo() {\n    print(&#39;Document 내용: $content&#39;);\n  }\n}\n\nvoid main() {\n  Document&lt;String&gt; doc = Document&lt;String&gt;(&#39;이것은 문서입니다.&#39;);\n  doc.printInfo(); // 출력: Document 내용: 이것은 문서입니다.\n}</code>\n        </deckgo-highlight-code>\n<h2 id=\"출처\" style=\"position:relative;\">출처<a href=\"#%EC%B6%9C%EC%B2%98\" aria-label=\"출처 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ul>\n<li><a href=\"https://dart-tutorial.com/object-oriented-programming/generics-in-dart/\">LEARN_DART</a></li>\n</ul>","excerpt":"Dart의 제네릭 정의 제네릭은 클래스, 메서드, 인터페이스 등을 다양한 데이터 타입과 함께 사용할 수 있도록 하는 프로그래밍 개념 타입 파라미터를 사용하여 코드의 재사용성을 높이고, 컴파일 시 타입 안정성을 보장함 목적 타입 안전성 강화 컴파일 시…","timeToRead":2,"headings":[{"id":"dart의-제네릭","value":"Dart의 제네릭","depth":1},{"id":"정의","value":"정의","depth":2},{"id":"목적","value":"목적","depth":2},{"id":"제네릭-클래스","value":"제네릭 클래스","depth":2},{"id":"기본-사용법","value":"기본 사용법","depth":3},{"id":"타입-제한","value":"타입 제한","depth":3},{"id":"제네릭-메서드","value":"제네릭 메서드","depth":2},{"id":"제네릭-함수","value":"제네릭 함수","depth":2},{"id":"다중-제네릭","value":"다중 제네릭","depth":2},{"id":"제네릭과-믹스인","value":"제네릭과 믹스인","depth":2},{"id":"출처","value":"출처","depth":2}],"frontmatter":{"created":"2024-12-31 19:34:05 +0900","updated":"2024-12-31 20:08:11 +0900"},"fields":{"slug":"/Dart/제네릭","title":"제네릭"}}},"pageContext":{"slug":"/Dart/제네릭","title":"제네릭"}},"staticQueryHashes":["2328167765","3156452557"],"slicesMap":{}}