{"componentChunkName":"component---src-templates-wiki-template-tsx","path":"/웹/서버_사이드_렌더링/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"서버-사이드-렌더링\" style=\"position:relative;\">서버 사이드 렌더링<a href=\"#%EC%84%9C%EB%B2%84-%EC%82%AC%EC%9D%B4%EB%93%9C-%EB%A0%8C%EB%8D%94%EB%A7%81\" aria-label=\"서버 사이드 렌더링 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p>서버 사이드 렌더링(Server-Side Rendering, SSR)은 웹 애플리케이션의 렌더링 방식 중 하나다. 서버에서 페이지를 만들어 클라이언트로 보내는 방법이다. 흔히 클라이언트 사이드 렌더링(Client-Side Rendering, CSR)과 비교한다.</p>\n<h1 id=\"렌더링이란\" style=\"position:relative;\">렌더링이란?<a href=\"#%EB%A0%8C%EB%8D%94%EB%A7%81%EC%9D%B4%EB%9E%80\" aria-label=\"렌더링이란 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p>렌더링이라는 용어는 문맥에 따라 의미를 다르게 해석할 수 있다. 브라우저에서 렌더링이란 HTML, CSS 및 자바스크립트를 파싱하는 것부터 페이지를 화면에 보여주기까지의 전 과정을 의미한다. 그렇다면 서버 사이드 렌더링은 서버에서 브라우저의 화면을 그리는걸까? 화면을 그리는 건 브라우저가 하는 일이다. 따라서 브라우저에서의 렌더링과 그 의미가 다르다. SSR의 렌더링은 서버에서 HTML을 만드는 과정이다. 그렇다면 정적 렌더링(Static Rendering)과는 어떤 차이가 있는걸까? 정적 렌더링 방식도 서버에서 HTML을 생성하기 때문에 그 둘을 구별할 수 있어야 한다. 그 차이는 렌더링을 하는 시점에 있다. 정적 렌더링은 빌드 시점에 HTML을 생성하지만 서버 사이드 렌더링은 클라이언트 요청에 따라 동적으로 렌더링한다. 즉 서버 사이드 렌더링은 서버 사이드 \"동적\" 렌더링이라고 할 수 있다.</p>\n<h1 id=\"왜-초기-화면일까\" style=\"position:relative;\">왜 초기 화면일까?<a href=\"#%EC%99%9C-%EC%B4%88%EA%B8%B0-%ED%99%94%EB%A9%B4%EC%9D%BC%EA%B9%8C\" aria-label=\"왜 초기 화면일까 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<p>SSR의 장점으로 가장 많이 언급되는 것 중 하나는 초기 로딩이 빠르다는 점이다. 브라우저 입장에서 본다면 서버가 자신이 할 일, 예를 들어 리액트 앱이면 자바스크립트를 파싱하여 HTML을 채우는 작업을 서버가 대신 해준 셈이다. 상대적으로 고용량인 자바스크립트 파일이 도착할 때까지 기다리지 않아도 된다. 덕분에 사용자는 빠르게 화면을 볼 수 있다. 만약 DOM을 변경할 필요가 없는 페이지에서는 서버가 처음에 보내준 문서가 곧 엔드 콘텐츠가 될 수 있다. 따라서 정적 콘텐츠의 비중이 높은 서비스에서 SSR은 좋은 전략이 될 수 있다. 반면 DOM을 자주 변경하는 페이지라면 초기 렌더링의 이점은 누릴 수 있겠지만 상호작용에 따라 서버로 HTML을 다시 요청해야 하므로 이는 UX에 나쁜 영향을 주기 쉽다. CSR은 초기 렌더링이 상대적으로 느릴 뿐이지(이마저도 코드 스플리팅으로 어느 정도 극복이 가능함) 렌더링된 이후에는 부드럽고 빠른 화면 전환을 보여준다. 따라서 SSR과 CSR의 장점을 적절히 조합하는 것이 중요하다.</p>\n<h1 id=\"장점\" style=\"position:relative;\">장점<a href=\"#%EC%9E%A5%EC%A0%90\" aria-label=\"장점 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<ul>\n<li>초기 로딩이 빠르다. 자바스크립트를 해석하여 빈 문서로부터 모든 것을 그려야 하는 CSR과 다르게 서버에서 초기 렌더링을 책임지기 때문에 사용자는 빠르게 초기 화면을 볼 수 있다.</li>\n<li>검색 엔진 최적화에 좋다. 검색 엔진의 크롤러는 주로 HTML을 크롤링하는데, 서버에서 미리 만들어진 HTML이 바로 노출되므로 웹 페이지가 담고 있는 정보를 크롤러가 쉽게 수집할 수 있다.</li>\n<li>클라이언트의 성능이나 호환성에 제약을 덜 받는다. 성능의 장점은 서버의 컴퓨팅 성능이 클라이언트보다 더 좋을 때 누릴 수 있다.</li>\n</ul>\n<h1 id=\"단점\" style=\"position:relative;\">단점<a href=\"#%EB%8B%A8%EC%A0%90\" aria-label=\"단점 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<ul>\n<li>상호작용에 따라 화면이 전체적으로 렌더링될 수 있다. 이는 좋지 않은 사용자 경험으로 이어진다.</li>\n<li>웹 서버를 관리해야 한다. 리소스가 많아지고 트랙픽이 증가하면 이는 서버 부담으로 이어진다. 요청이 많아지는 경우 지연이 발생하여 오히려 초기 로딩이 느려질 수 있다.</li>\n</ul>\n<h1 id=\"언제-도입해야-할까\" style=\"position:relative;\">언제 도입해야 할까?<a href=\"#%EC%96%B8%EC%A0%9C-%EB%8F%84%EC%9E%85%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C\" aria-label=\"언제 도입해야 할까 permalink\" class=\"header-anchor after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h1>\n<ul>\n<li>검색 엔진 최적화가 필요할 때</li>\n<li>동적 콘텐츠가 많지 않은 경우</li>\n<li>초기 로딩 속도가 중요한 경우</li>\n<li>서버의 강력한 성능이 필요한 경우</li>\n</ul>","excerpt":"서버 사이드 렌더링 서버 사이드 렌더링(Server-Side Rendering, SSR)은 웹 애플리케이션의 렌더링 방식 중 하나다. 서버에서 페이지를 만들어 클라이언트로 보내는 방법이다. 흔히 클라이언트 사이드 렌더링(Client-Side Rend…","timeToRead":1,"headings":[{"id":"서버-사이드-렌더링","value":"서버 사이드 렌더링","depth":1},{"id":"렌더링이란","value":"렌더링이란?","depth":1},{"id":"왜-초기-화면일까","value":"왜 초기 화면일까?","depth":1},{"id":"장점","value":"장점","depth":1},{"id":"단점","value":"단점","depth":1},{"id":"언제-도입해야-할까","value":"언제 도입해야 할까?","depth":1}],"frontmatter":{"created":"2023-08-22 14:28:06 +0900","updated":"2023-10-02 06:08:31 +0900"},"fields":{"slug":"/웹/서버_사이드_렌더링","title":"서버 사이드 렌더링"}}},"pageContext":{"slug":"/웹/서버_사이드_렌더링","title":"서버 사이드 렌더링"}},"staticQueryHashes":["2328167765","3156452557"],"slicesMap":{}}