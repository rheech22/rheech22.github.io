{"componentChunkName":"component---src-templates-wiki-template-tsx","path":"/타입스크립트/5.5_버전_타입_추론/","result":{"data":{"markdownRemark":{"html":"<p>타입스크립트 5.5 버전에서 타입 추론에 관한 큰 변경이 있었다. 이전까지는 filter 메서드의 결과 추론이 만족스럽지 않았는데, 가령 아래와 같은 경우다.</p>\n<deckgo-highlight-code language=\"typescript\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">function makeBirdCalls(countries: string[]) {\n  // birds: (Bird | undefined)[]\n  const birds = countries\n    .map(country =&gt; nationalBirds.get(country))\n    .filter(bird =&gt; bird !== undefined);\n \n  for (const bird of birds) {\n    bird.sing();  // error: &#39;bird&#39; is possibly &#39;undefined&#39;.\n  }\n}</code>\n        </deckgo-highlight-code>\n<br />\n하지만 이번 패치로 인해 타입스크립트가 좀 더 똑똑해졌다.\n<deckgo-highlight-code language=\"typescript\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">function makeBirdCalls(countries: string[]) {\n  // birds: Bird[]\n  const birds = countries\n    .map(country =&gt; nationalBirds.get(country))\n    .filter(bird =&gt; bird !== undefined);\n  \n  for (const bird of birds) {\n    bird.sing();  // ok!\n  }\n}</code>\n        </deckgo-highlight-code>\n<br />\n덕분에 타입 가드를 만들지 않아도 돼서 더 편하게 사용할 수 있다.\n다만, 여전히 내부 객체의 속성에 대해서는 잘 추론할 수 없다.\n<p>user의 name이 존재하지 않을 수도 있는 상황에서</p>\n<deckgo-highlight-code language=\"typescript\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">type User = { id: string; name?: string | null }\n\nconst users: User[] = [\n    {\n        id: &#39;1&#39;,\n        name: &#39;aiden&#39;\n    },\n    {\n        id: &#39;2&#39;\n    },\n]</code>\n        </deckgo-highlight-code>\n<br />\nname을 가진 user를 걸러내고 그 중 이름만 하나의 배열에 담으려고 한다면\n<deckgo-highlight-code language=\"typescript\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">const userNames1: string[] = users.filter((user) =&gt; !!user.name).map((user) =&gt;  user.name);\nconst userNames2: string[] = users.filter((user) =&gt; Boolean(user.name)).map((user) =&gt;  user.name);\nconst userNames3: string[] = users.filter((user) =&gt; user.name !== null &amp;&amp; user.name !== undefined).map((user) =&gt;  user.name);</code>\n        </deckgo-highlight-code>\n<br />\n아래와 같은 타입 에러가 발생한다.\n<deckgo-highlight-code language=\"typescript\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">Type &#39;(string | null | undefined)[]&#39; is not assignable to type &#39;string[]&#39;.(2322)\n</code>\n        </deckgo-highlight-code>\n<br />\nuser의 name이 아닌 User 타입 자체가 유니언인 경우에는 비교 연산자를 통한 타입 추론이 가능하다.\n<deckgo-highlight-code language=\"typescript\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">type User = { id: string; name: string } | { id: string; name?: undefined } | { id: string; name: null };\n\nconst userNames1: string[] = users2.filter((user) =&gt; !!user.name).map((user) =&gt;  user.name); // error\nconst userNames2: string[] = users2.filter((user) =&gt; Boolean(user.name)).map((user) =&gt;  user.name); // error\nconst userNames3: string[] = users2.filter((user) =&gt; user.name !== null &amp;&amp; user.name !== undefined).map((user) =&gt;  user.name); // good</code>\n        </deckgo-highlight-code>\n<br />\n<p>혹은 할당된 타입이 없어도 비교 연산자를 통한 타입 추론이 가능하다.</p>\n<deckgo-highlight-code language=\"typescript\" terminal=\"carbon\" theme=\"one-dark\"  >\n          <code slot=\"code\">const users = [\n    {\n        id: &#39;1&#39;,\n        name: &#39;aiden&#39;\n    },\n    {\n        id: &#39;2&#39;\n    },\n]\n\nconst userNames: string[] = users2.filter((user) =&gt; user.name !== null &amp;&amp; user.name !== undefined).map((user) =&gt;  user.name); // good</code>\n        </deckgo-highlight-code>\n<br />\n<p>아쉽게도 타입을 당장 바꾸기 어렵거나 코드젠으로 직접 생성하지 않는 타입이라면 결국 타입 가드를 사용해야 한다.\n이미 타입스크립트 레포에는 관련 이슈가 등록돼 있는데, 여기서 누군가 만들어 놓은 타입 가드도 참고할 수 있다.</p>\n<p><a href=\"https://github.com/microsoft/TypeScript/issues/42384#issuecomment-1440615593\">https://github.com/microsoft/TypeScript/issues/42384#issuecomment-1440615593</a></p>","excerpt":"타입스크립트 5.5 버전에서 타입 추론에 관한 큰 변경이 있었다. 이전까지는 filter 메서드의 결과 추론이 만족스럽지 않았는데, 가령 아래와 같은 경우다. user의 name이 존재하지 않을 수도 있는 상황에서 혹은 할당된 타입이 없어도 비교 연…","timeToRead":1,"headings":[],"frontmatter":{"created":"2024-09-08 14:09:10 +0900","updated":"2024-09-08 14:40:39 +0900"},"fields":{"slug":"/타입스크립트/5.5_버전_타입_추론","title":"5.5 버전 타입 추론"}}},"pageContext":{"slug":"/타입스크립트/5.5_버전_타입_추론","title":"5.5 버전 타입 추론"}},"staticQueryHashes":["2328167765","3156452557"],"slicesMap":{}}