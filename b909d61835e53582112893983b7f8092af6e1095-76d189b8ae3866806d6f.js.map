{"version":3,"file":"b909d61835e53582112893983b7f8092af6e1095-76d189b8ae3866806d6f.js","mappings":"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","sources":["webpack://gatsby-starter-blog-github-theme/./node_modules/camelcase/index.js","webpack://gatsby-starter-blog-github-theme/../src/image-utils.ts","webpack://gatsby-starter-blog-github-theme/../src/components/hooks.ts","webpack://gatsby-starter-blog-github-theme/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-blog-github-theme/../src/components/picture.tsx","webpack://gatsby-starter-blog-github-theme/../src/components/placeholder.tsx","webpack://gatsby-starter-blog-github-theme/../src/components/main-image.tsx","webpack://gatsby-starter-blog-github-theme/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-blog-github-theme/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-blog-github-theme/../src/components/static-image.server.tsx","webpack://gatsby-starter-blog-github-theme/../src/components/static-image.tsx","webpack://gatsby-starter-blog-github-theme/./src/assets/icons/ArrowThin.tsx","webpack://gatsby-starter-blog-github-theme/./src/components/SEO.tsx","webpack://gatsby-starter-blog-github-theme/./src/hooks/useScrollToTop.ts","webpack://gatsby-starter-blog-github-theme/./src/components/ScrollToTop.tsx","webpack://gatsby-starter-blog-github-theme/./src/assets/icons/Clip.tsx","webpack://gatsby-starter-blog-github-theme/./src/assets/icons/Email.tsx","webpack://gatsby-starter-blog-github-theme/./src/assets/icons/Github.tsx","webpack://gatsby-starter-blog-github-theme/./src/assets/icons/Instagram.tsx","webpack://gatsby-starter-blog-github-theme/./src/assets/icons/LinkedIn.tsx","webpack://gatsby-starter-blog-github-theme/./src/assets/icons/Resume.tsx","webpack://gatsby-starter-blog-github-theme/./src/assets/icons/Twitter.tsx","webpack://gatsby-starter-blog-github-theme/./src/components/Socials.tsx","webpack://gatsby-starter-blog-github-theme/./src/components/Bio.tsx","webpack://gatsby-starter-blog-github-theme/./src/components/Sidebar.tsx","webpack://gatsby-starter-blog-github-theme/./src/components/SidebarProvider.tsx","webpack://gatsby-starter-blog-github-theme/./src/hooks/useSiteMetadata.ts"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","const ArrowThin = (props: any) => (\n  <svg\n    aria-hidden=\"true\"\n    role=\"img\"\n    className=\"octicon octicon-chevron-up\"\n    viewBox=\"0 0 16 16\"\n    width={16}\n    height={16}\n    fill=\"currentColor\"\n    style={{\n      display: 'inline-block',\n      userSelect: 'none',\n      verticalAlign: 'text-bottom',\n      overflow: 'visible'\n    }}\n    {...props}>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3.22 9.78a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 0l4.25 4.25a.75.75 0 01-1.06 1.06L8 6.06 4.28 9.78a.75.75 0 01-1.06 0z\"\n    />\n  </svg>\n);\n\nexport default ArrowThin;\n","interface Props {\n  title?: string;\n  subtitle?: string;\n  description?: string;\n  image?: string;\n  url?: string;\n  pathname?: string;\n  twitterUsername?: string;\n  updated?: string;\n  created?: string;\n  children?: JSX.Element;\n}\n\nconst SEO = ({\n  title,\n  subtitle,\n  description,\n  image,\n  url,\n  twitterUsername,\n  pathname,\n  created,\n  updated,\n  children\n}: Props) => {\n  const combinedTitle = subtitle ? `${subtitle} | ${title}` : title;\n\n  return (\n    <>\n      <title>{combinedTitle}</title>\n      <link\n        as=\"style\"\n        rel=\"stylesheet\"\n        href=\"https://fonts.googleapis.com/css2?family=Sora:wght@100;200;300;400;500&display=swap\"\n      />\n      <link\n        as=\"style\"\n        rel=\"stylesheet\"\n        href=\"//spoqa.github.io/spoqa-han-sans/css/SpoqaHanSansNeo.css\"\n      />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n      <meta name=\"description\" content={description} />\n      <meta name=\"image\" content={image} />\n      <meta name=\"og:title\" content={title} />\n      <meta name=\"og:description\" content={description} />\n      <meta name=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={combinedTitle} />\n      <meta name=\"twitter:url\" content={`${url}${pathname || ''}`} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={`${url}${image}`} />\n      <meta name=\"twitter:creator\" content={`@${twitterUsername}`} />\n      <meta name=\"naver-site-verification\" content=\"45d911481aa02bda5a391b5f2474bc61356de3f8\" />\n      <meta httpEquiv=\"Permissions-Policy\" content=\"interest-cohort=(), user-id=()\" />\n      <script type=\"application/ld+json\">\n        {`\n            {\n              \"@context\": \"https://schema.org\",\n              \"@type\": \"HowTo\",\n              \"url\": \"${url}${pathname || ''}\",\n              \"headline\": \"${title}\",\n              \"datePublished\": \"${created ?? 'someday'}\",\n              \"dateModified\": \"${updated ?? new Date().toLocaleDateString()}\",\n              \"image\": \"[]\"\n            }\n          `}\n      </script>\n      {children}\n    </>\n  );\n};\n\nexport default SEO;\n","import { useEffect, useRef, useState } from 'react';\n\ninterface ThrottleParams {\n  cb: () => void;\n  wait: number;\n}\n\nconst useScrollToTop = () => {\n  const [isTop, setIsTop] = useState(true);\n\n  const timer = useRef<ReturnType<typeof setTimeout> | null>(null);\n\n  const handleClickButton = () => (document.documentElement.scrollTop = 0);\n\n  const throttle = ({ cb, wait }: ThrottleParams) => {\n    if (timer.current) return;\n\n    timer.current = setTimeout(() => {\n      cb();\n      timer.current = null;\n    }, wait);\n  };\n\n  useEffect(() => {\n    setIsTop(document.documentElement.scrollTop === 0);\n\n    const handleScroll = () => setIsTop(document.documentElement.scrollTop === 0);\n\n    const throttleHandler = () => throttle({ cb: handleScroll, wait: 600 });\n\n    document.addEventListener('scroll', throttleHandler);\n\n    return () => {\n      document.removeEventListener('scroll', throttleHandler);\n      if (timer.current) clearTimeout(timer.current);\n    };\n  }, []);\n\n  return {\n    isTop,\n    handleClickButton\n  };\n};\n\nexport default useScrollToTop;\n","import styled from 'styled-components';\n\nimport Arrow from '../assets/icons/ArrowThin';\nimport useScrollToTop from '../hooks/useScrollToTop';\nimport { flex } from '../styles/mixins';\n\nconst ScrollToTop = () => {\n  const { isTop, handleClickButton } = useScrollToTop();\n\n  if (isTop) return null;\n\n  return (\n    <Container onClick={() => handleClickButton()}>\n      <Arrow />\n    </Container>\n  );\n};\n\nexport default ScrollToTop;\n\nconst Container = styled.div`\n  ${flex({ alignItems: 'center', justifyContent: 'center' })}\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  margin: 0 24px 24px 0;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  background-color: ${({ theme }) => theme.scrollToTopBg};\n  cursor: pointer;\n\n  svg {\n    path {\n      fill: ${({ theme }) => theme.scrollToTop};\n    }\n  }\n\n  @media (hover: hover) {\n    &:hover {\n      &::before {\n        content: '';\n        position: absolute;\n        top: -6px;\n        right: 50%;\n        bottom: auto;\n        border: 6px solid transparent;\n        border-top-color: ${({ theme }) => theme.tooltipBg};\n        margin-right: -6px;\n        width: 0;\n        height: 0;\n        color: ${({ theme }) => theme.tooltipBg};\n        opacity: 0.7;\n      }\n\n      &::after {\n        content: 'Scroll to top';\n        position: absolute;\n        bottom: 100%;\n        right: 50%;\n        font-size: 12px;\n        border: none;\n        border-radius: 6px;\n        margin-bottom: 6px;\n        padding: 4px 6px;\n        min-width: fit-content;\n        background-color: ${({ theme }) => theme.tooltipBg};\n        color: ${({ theme }) => theme.tooltip};\n        opacity: 0.7;\n        transform: translateX(50%);\n        pointer-events: none;\n        white-space: nowrap;\n        -webkit-font-smoothing: subpixel-antialiased;\n      }\n    }\n  }\n`;\n","const Clip = (props: any) => (\n  <svg\n    width=\"24px\"\n    height=\"24px\"\n    viewBox=\"0 0 24 24\"\n    id=\"magicoon-Regular\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}>\n    <defs>\n      <style>{'.cls-1{fill:#41416e;}'}</style>\n    </defs>\n    <title>{'link'}</title>\n    <g id=\"link-Regular\">\n      <path\n        id=\"link-Regular-2\"\n        data-name=\"link-Regular\"\n        className=\"cls-1\"\n        d=\"M20.368,10.29l-1.839,1.84a.75.75,0,1,1-1.061-1.06l1.84-1.841a3.214,3.214,0,0,0,0-4.539,3.286,3.286,0,0,0-4.538,0L11.411,8.05a2.3,2.3,0,0,0-.3.357,3.188,3.188,0,0,0,.3,4.183.75.75,0,1,1-1.061,1.06,4.664,4.664,0,0,1-.474-6.094,3.625,3.625,0,0,1,.474-.566l3.359-3.36a4.709,4.709,0,1,1,6.659,6.66Zm-7.779.06a.749.749,0,0,0,0,1.06,3.172,3.172,0,0,1,.749,3.353,3.068,3.068,0,0,1-.749,1.187L9.23,19.31a3.286,3.286,0,0,1-4.538,0,3.214,3.214,0,0,1,0-4.539l1.84-1.841a.75.75,0,1,0-1.061-1.06L3.632,13.71a4.709,4.709,0,1,0,6.659,6.66l3.359-3.36a4.546,4.546,0,0,0,1.105-1.756,4.712,4.712,0,0,0-1.105-4.9A.75.75,0,0,0,12.589,10.35Z\"\n      />\n    </g>\n  </svg>\n);\n\nexport default Clip;\n","const Email = (props: any) => (\n  <svg\n    width=\"24px\"\n    height=\"24px\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n    {...props}>\n    <path\n      d=\"M11.1 15.75C10.9019 15.7474 10.7126 15.6676 10.5725 15.5275C10.4324 15.3874 10.3526 15.1981 10.35 15V9.5C10.3584 8.51394 10.0023 7.55953 9.35 6.82C9.06417 6.48906 8.71135 6.22255 8.31487 6.0381C7.91838 5.85365 7.48726 5.75545 7.05 5.75C6.11686 5.81426 5.24677 6.2442 4.62885 6.94638C4.01093 7.64857 3.6951 8.56625 3.75 9.5V15C3.75 15.1989 3.67099 15.3897 3.53033 15.5303C3.38968 15.671 3.19892 15.75 3 15.75C2.80109 15.75 2.61033 15.671 2.46967 15.5303C2.32902 15.3897 2.25 15.1989 2.25 15V9.5C2.21642 8.83917 2.31434 8.17825 2.53808 7.55555C2.76182 6.93285 3.10694 6.36074 3.55342 5.87241C3.9999 5.38407 4.53887 4.98921 5.13908 4.71071C5.7393 4.43221 6.38882 4.27561 7.05 4.25C7.69863 4.25518 8.3388 4.39778 8.9283 4.6684C9.5178 4.93902 10.0432 5.33151 10.47 5.82C11.3684 6.83434 11.8599 8.14507 11.85 9.5V15C11.8474 15.1981 11.7676 15.3874 11.6275 15.5275C11.4874 15.6676 11.2981 15.7474 11.1 15.75Z\"\n      fill=\"black\"\n    />\n    <path\n      d=\"M21 15.75H3C2.80109 15.75 2.61032 15.671 2.46967 15.5303C2.32902 15.3897 2.25 15.1989 2.25 15C2.25 14.8011 2.32902 14.6103 2.46967 14.4697C2.61032 14.329 2.80109 14.25 3 14.25H20.25V9.5C20.2584 8.51394 19.9023 7.55953 19.25 6.82C18.9698 6.49525 18.625 6.2324 18.2376 6.04818C17.8502 5.86396 17.4288 5.76241 17 5.75C16.8011 5.75 16.6103 5.67098 16.4697 5.53033C16.329 5.38968 16.25 5.19891 16.25 5C16.25 4.80109 16.329 4.61032 16.4697 4.46967C16.6103 4.32902 16.8011 4.25 17 4.25C17.6488 4.25391 18.2894 4.39594 18.8791 4.66664C19.4688 4.93735 19.9941 5.33052 20.42 5.82C21.3003 6.84168 21.7737 8.15161 21.75 9.5V15C21.7474 15.1981 21.6676 15.3874 21.5275 15.5275C21.3874 15.6676 21.1981 15.7474 21 15.75Z\"\n      fill=\"black\"\n    />\n    <path\n      d=\"M12 22.75C11.8019 22.7474 11.6126 22.6676 11.4725 22.5275C11.3324 22.3874 11.2526 22.1981 11.25 22V15.75H3C2.80109 15.75 2.61032 15.671 2.46967 15.5303C2.32902 15.3897 2.25 15.1989 2.25 15C2.25 14.8011 2.32902 14.6103 2.46967 14.4697C2.61032 14.329 2.80109 14.25 3 14.25H12C12.1981 14.2526 12.3874 14.3324 12.5275 14.4725C12.6676 14.6126 12.7474 14.8019 12.75 15V22C12.7474 22.1981 12.6676 22.3874 12.5275 22.5275C12.3874 22.6676 12.1981 22.7474 12 22.75Z\"\n      fill=\"black\"\n    />\n    <path\n      d=\"M17.4 5.75H7.5C7.30109 5.75 7.11032 5.67098 6.96967 5.53033C6.82902 5.38968 6.75 5.19891 6.75 5C6.75 4.80109 6.82902 4.61032 6.96967 4.46967C7.11032 4.32902 7.30109 4.25 7.5 4.25H17.4C17.5989 4.25 17.7897 4.32902 17.9303 4.46967C18.071 4.61032 18.15 4.80109 18.15 5C18.15 5.19891 18.071 5.38968 17.9303 5.53033C17.7897 5.67098 17.5989 5.75 17.4 5.75Z\"\n      fill=\"black\"\n    />\n    <path\n      d=\"M16 9.75C15.8019 9.74741 15.6126 9.66756 15.4725 9.52747C15.3324 9.38737 15.2526 9.19811 15.25 9V2C15.2526 1.80189 15.3324 1.61263 15.4725 1.47253C15.6126 1.33244 15.8019 1.25259 16 1.25H21C21.1989 1.25 21.3897 1.32902 21.5303 1.46967C21.671 1.61032 21.75 1.80109 21.75 2C21.75 2.19891 21.671 2.38968 21.5303 2.53033C21.3897 2.67098 21.1989 2.75 21 2.75H16.75V9C16.7474 9.19811 16.6676 9.38737 16.5275 9.52747C16.3874 9.66756 16.1981 9.74741 16 9.75Z\"\n      fill=\"black\"\n    />\n  </svg>\n);\n\nexport default Email;\n","const Github = (props: any) => (\n  <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path\n      fill=\"#333\"\n      fillRule=\"evenodd\"\n      d=\"M11.9989871,1 C5.92550416,1 1,5.92482888 1,12.0003376 C1,16.8603395 4.15153934,20.9829338 8.52263728,22.4374904 C9.0729918,22.5387827 9.27355045,22.199116 9.27355045,21.9073943 C9.27355045,21.6467356 9.2640965,20.954572 9.25869425,20.0368642 C6.19899322,20.7013414 5.55342398,18.5620492 5.55342398,18.5620492 C5.0530403,17.2911692 4.33183953,16.9528531 4.33183953,16.9528531 C3.33309801,16.2708186 4.40747107,16.2843243 4.40747107,16.2843243 C5.51155652,16.3619816 6.09229872,17.4181221 6.09229872,17.4181221 C7.07348292,19.0988981 8.66714755,18.6133706 9.2938089,18.3317781 C9.39375058,17.6213819 9.67804414,17.1365297 9.99205009,16.86169 C7.54955646,16.5841493 4.98146045,15.6401056 4.98146045,11.4249977 C4.98146045,10.224347 5.41026428,9.24181221 6.11390773,8.47334172 C6.00046042,8.19512569 5.62297799,7.07618404 6.22195279,5.56220265 C6.22195279,5.56220265 7.14506277,5.26642929 9.24653918,6.68992296 C10.12373,6.44547101 11.0650726,6.32392032 12.0003376,6.31919335 C12.9349274,6.32392032 13.8755947,6.44547101 14.7541361,6.68992296 C16.8542619,5.26642929 17.7760214,5.56220265 17.7760214,5.56220265 C18.3763467,7.07618404 17.9988643,8.19512569 17.8860923,8.47334172 C18.5910863,9.24181221 19.0165137,10.224347 19.0165137,11.4249977 C19.0165137,15.6509101 16.444366,16.5807729 13.9944443,16.8529114 C14.3888087,17.192578 14.7406305,17.863808 14.7406305,18.890236 C14.7406305,20.3603241 14.7271248,21.5467939 14.7271248,21.9073943 C14.7271248,22.2018171 14.9256576,22.5441849 15.4834403,22.4368151 C19.8511618,20.9788821 23,16.8589889 23,12.0003376 C23,5.92482888 18.0744958,1 11.9989871,1\"\n    />\n  </svg>\n);\n\nexport default Github;\n","const Instagram = (props: any) => (\n  <svg\n    width=\"24px\"\n    height=\"24px\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    preserveAspectRatio=\"xMidYMid\"\n    role=\"img\"\n    {...props}>\n    <g>\n      <path\n        d=\"M12 2.162C15.204 2.162 15.584 2.174 16.849 2.232C18.019 2.286 18.654 2.481 19.077 2.645C19.637 2.863 20.037 3.123 20.457 3.543C20.877 3.963 21.137 4.363 21.355 4.923C21.519 5.346 21.714 5.981 21.768 7.151C21.826 8.416 21.838 8.796 21.838 12C21.838 15.204 21.826 15.584 21.768 16.849C21.714 18.019 21.519 18.654 21.355 19.077C21.137 19.637 20.877 20.037 20.457 20.457C20.037 20.877 19.637 21.137 19.077 21.355C18.654 21.519 18.019 21.715 16.849 21.768C15.584 21.826 15.204 21.838 12 21.838C8.796 21.838 8.416 21.826 7.151 21.768C5.981 21.715 5.346 21.519 4.923 21.355C4.363 21.137 3.963 20.877 3.543 20.457C3.123 20.037 2.863 19.637 2.645 19.077C2.481 18.654 2.285 18.019 2.232 16.849C2.174 15.584 2.162 15.204 2.162 12C2.162 8.796 2.174 8.416 2.232 7.151C2.285 5.981 2.481 5.346 2.645 4.923C2.863 4.363 3.123 3.963 3.543 3.543C3.963 3.123 4.363 2.863 4.923 2.645C5.346 2.481 5.981 2.286 7.151 2.232C8.416 2.174 8.796 2.162 12 2.162M12 0C8.741 0 8.332 0.014 7.052 0.072C5.775 0.131 4.903 0.333 4.139 0.63C3.35 0.937 2.681 1.347 2.014 2.014C1.347 2.681 0.937 3.35 0.63 4.14C0.333 4.903 0.13 5.775 0.072 7.052C0.014 8.332 0 8.741 0 12C0 15.259 0.014 15.668 0.072 16.948C0.13 18.225 0.333 19.097 0.63 19.861C0.937 20.65 1.347 21.319 2.014 21.986C2.681 22.653 3.35 23.063 4.139 23.37C4.903 23.667 5.775 23.87 7.052 23.928C8.332 23.986 8.741 24 12 24C15.259 24 15.668 23.986 16.948 23.928C18.225 23.87 19.097 23.667 19.86 23.37C20.65 23.063 21.319 22.653 21.986 21.986C22.653 21.319 23.063 20.65 23.37 19.861C23.667 19.097 23.869 18.225 23.928 16.948C23.986 15.668 24 15.259 24 12C24 8.741 23.986 8.332 23.928 7.052C23.869 5.775 23.667 4.903 23.37 4.14C23.063 3.35 22.653 2.681 21.986 2.014C21.319 1.347 20.65 0.937 19.86 0.63C19.097 0.333 18.225 0.131 16.948 0.072C15.668 0.014 15.259 0 12 0ZM12 5.838C8.597 5.838 5.838 8.597 5.838 12C5.838 15.403 8.597 18.162 12 18.162C15.403 18.162 18.162 15.403 18.162 12C18.162 8.597 15.403 5.838 12 5.838ZM12 16C9.791 16 8 14.209 8 12C8 9.791 9.791 8 12 8C14.209 8 16 9.791 16 12C16 14.209 14.209 16 12 16ZM19.846 5.594C19.846 6.39 19.201 7.034 18.406 7.034C17.61 7.034 16.966 6.39 16.966 5.594C16.966 4.799 17.61 4.154 18.406 4.154C19.201 4.154 19.846 4.799 19.846 5.594Z\"\n        fill=\"#0A0A08\"\n      />\n    </g>\n  </svg>\n);\nexport default Instagram;\n","const LinkedIn = (props: any) => (\n  <svg\n    width=\"24px\"\n    height=\"24px\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n    {...props}>\n    <path d=\"M1.2 7.2h4.8v15.6H1.2V7.2zm2.4 -6C2.16 1.2 1.2 2.4 1.2 3.72 1.2 4.92 2.16 6 3.6 6c1.56 0 2.4 -1.08 2.4 -2.4s-0.96 -2.4 -2.4 -2.4zm13.92 6.24c-2.52 0 -3.96 1.44 -4.56 2.4h-0.12l-0.24 -2.04H8.28c0 1.32 0.12 2.88 0.12 4.68V22.8h4.8v-8.52c0 -0.48 0 -0.84 0.12 -1.2 0.36 -0.84 0.96 -1.92 2.28 -1.92 1.68 0 2.4 1.44 2.4 3.36V22.8h4.8v-8.88c0 -4.44 -2.28 -6.48 -5.28 -6.48z\" />\n  </svg>\n);\nexport default LinkedIn;\n","const Resume = (props: any) => (\n  <svg\n    width=\"24px\"\n    height=\"24px\"\n    viewBox=\"0 0 24 24\"\n    style={{\n      shapeRendering: 'geometricPrecision',\n      textRendering: 'geometricPrecision',\n      imageRendering: 'optimizeQuality',\n      fillRule: 'evenodd',\n      clipRule: 'evenodd'\n    }}\n    xmlSpace=\"preserve\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    {...props}>\n    <defs>\n      <style type=\"text/css\">{'\\n    .fil0 {fill:black;fill-rule:nonzero}\\n   '}</style>\n    </defs>\n    <g id=\"Layer_x0020_1\">\n      <path\n        className=\"fil0\"\n        d=\"M15.3 22.527c0.77 0 0.77 1.17 0 1.17l-14.102 0c-0.323 0 -0.585 -0.262 -0.585 -0.585l0 -17.623c0 -0.162 0.065 -0.308 0.171 -0.414l4.601 -4.6c0.114 -0.114 0.264 -0.171 0.414 -0.171l13.235 0c0.323 0 0.585 0.262 0.585 0.585l0 10.243c0 0.77 -1.17 0.77 -1.17 0l0 -9.658 -12.407 0 -4.257 4.258 0 16.795 13.516 0zm-9.956 -5.159c-0.77 0 -0.77 -1.17 0 -1.17l8.693 0c0.77 0 0.77 1.17 0 1.17l-8.693 0zm0 -7.786c-0.77 0 -0.77 -1.17 0 -1.17l8.693 0c0.77 0 0.77 1.17 0 1.17l-8.693 0zm0 2.595c-0.77 0 -0.77 -1.17 0 -1.17l8.693 0c0.77 0 0.77 1.17 0 1.17l-8.693 0zm0 2.595c-0.77 0 -0.77 -1.17 0 -1.17l8.693 0c0.77 0 0.77 1.17 0 1.17l-8.693 0zm0 -7.786c-0.77 0 -0.77 -1.17 0 -1.17l8.693 0c0.77 0 0.77 1.17 0 1.17l-8.693 0zm14.076 6.754c1.413 0 2.558 1.145 2.558 2.558 0 0.513 -0.151 0.991 -0.411 1.391 1.065 0.707 1.742 1.873 1.818 3.152 0.045 0.767 -1.121 0.835 -1.166 0.069 -0.06 -1.012 -0.641 -1.913 -1.534 -2.388 -0.373 0.213 -0.804 0.334 -1.265 0.334 -0.498 0 -0.962 -0.142 -1.355 -0.388 -0.948 0.457 -1.576 1.39 -1.638 2.442 -0.045 0.767 -1.211 0.698 -1.166 -0.069 0.079 -1.337 0.815 -2.548 1.958 -3.239 -0.226 -0.382 -0.357 -0.827 -0.357 -1.304 0 -1.413 1.145 -2.558 2.558 -2.558zm0 1.17c-0.766 0 -1.387 0.621 -1.387 1.388 0 0.766 0.621 1.387 1.387 1.387 0.766 0 1.388 -0.621 1.388 -1.387 0 -0.766 -0.621 -1.388 -1.388 -1.388z\"\n      />\n    </g>\n  </svg>\n);\n\nexport default Resume;\n","const Twitter = (props: any) => (\n  <svg width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path d=\"M20.779 7.495c0.01 0.194 0.013 0.391 0.013 0.586 0 5.988 -4.556 12.89 -12.888 12.89 -2.56 0 -4.939 -0.75 -6.944 -2.036a9.092 9.092 0 0 0 6.706 -1.874 4.535 4.535 0 0 1 -4.231 -3.145 4.63 4.63 0 0 0 2.046 -0.078 4.535 4.535 0 0 1 -3.634 -4.444v-0.056a4.519 4.519 0 0 0 2.052 0.568 4.53 4.53 0 0 1 -1.402 -6.049 12.859 12.859 0 0 0 9.337 4.734 4.576 4.576 0 0 1 -0.116 -1.033 4.528 4.528 0 0 1 4.529 -4.528 4.524 4.524 0 0 1 3.307 1.429 9.122 9.122 0 0 0 2.876 -1.099 4.547 4.547 0 0 1 -1.992 2.506 9.06 9.06 0 0 0 2.602 -0.713 9.148 9.148 0 0 1 -2.261 2.344z\" />\n  </svg>\n);\n\nexport default Twitter;\n","import styled from 'styled-components';\n\nimport config from '../../blog-config';\nimport Clip from '../assets/icons/Clip';\nimport Email from '../assets/icons/Email';\nimport Github from '../assets/icons/Github';\nimport Instagram from '../assets/icons/Instagram';\nimport LinkedIn from '../assets/icons/LinkedIn';\nimport Resume from '../assets/icons/Resume';\nimport Twitter from '../assets/icons/Twitter';\nimport { device } from '../styles/breakpoints';\nimport { flex } from '../styles/mixins';\n\nconst Socials = () => {\n  const { github, twitter, instagram, linkedIn, email, resume } = config;\n\n  const LINKS = [\n    {\n      label: 'link to LinkedIn',\n      url: linkedIn,\n      icon: <LinkedIn />\n    },\n    {\n      label: 'link to Twitter',\n      url: twitter,\n      icon: <Twitter />\n    },\n    {\n      label: 'link to GitHub',\n      url: github,\n      icon: <Github />\n    },\n    {\n      label: 'link to Instagram',\n      url: instagram,\n      icon: <Instagram />\n    },\n    {\n      label: 'send to Email',\n      url: email,\n      icon: <Email />\n    },\n    {\n      label: 'link to resume',\n      url: resume,\n      icon: <Resume />\n    }\n  ];\n\n  return (\n    <Container>\n      <div>\n        <Clip />\n      </div>\n      <ul>\n        {LINKS.map(({ url, icon, label }, i) => {\n          if (!url) return null;\n\n          return (\n            <li key={i}>\n              <a href={url === email ? `mailto:${url}` : url} aria-label={label}>\n                {icon}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </Container>\n  );\n};\n\nexport default Socials;\n\nconst Container = styled.div`\n  ${flex({ alignItems: 'center' })};\n  position: absolute;\n  left: 98px;\n  bottom: 10px;\n  border: ${({ theme }) => `1px solid ${theme.border}`};\n  border-radius: 19px;\n  width: 40px;\n  min-height: 40px;\n  overflow: hidden;\n  background-color: ${({ theme }) => theme.bg};\n  transition:\n    background-color 0.5s,\n    border-color 0.5s;\n\n  @media ${device.widerThanLaptopS} {\n    left: 128px;\n  }\n\n  &:hover {\n    width: fit-content;\n  }\n\n  & > div {\n    ${flex({ alignItems: 'center', justifyContent: 'center' })};\n    min-width: 38px;\n    min-height: 38px;\n    cursor: pointer;\n  }\n\n  & > ul {\n    ${flex({ alignItems: 'center' })};\n    height: 100%;\n    width: fit-content;\n\n    & > li {\n      width: 38px;\n\n      & > a {\n        ${flex({ alignItems: 'center', justifyContent: 'center' })};\n      }\n    }\n  }\n\n  svg {\n    height: 20px;\n    width: 20px;\n    path {\n      fill: ${({ theme }) => theme.mute};\n      transition: all 0.5s;\n    }\n  }\n\n  @media (hover: hover) {\n    svg {\n      &:hover {\n        path {\n          fill: ${({ theme }) => theme.default};\n        }\n      }\n    }\n  }\n`;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport styled from 'styled-components';\n\nimport config from '../../blog-config';\nimport { device } from '../styles/breakpoints';\nimport { flex } from '../styles/mixins';\nimport Socials from './Socials';\n\nconst Bio = () => {\n  const { author, description } = config;\n\n  return (\n    <Container>\n      <Wrapper>\n        <Avatar>\n          <StaticImage src=\"../images/avatar.jpeg\" alt=\"avatar\" placeholder=\"blurred\" />\n        </Avatar>\n        <Socials />\n      </Wrapper>\n      <Profile>\n        <Author>{author}</Author>\n        <Description>{description}</Description>\n      </Profile>\n    </Container>\n  );\n};\n\nexport default Bio;\n\nconst Container = styled.div`\n  ${flex({ alignItems: 'center' })}\n  margin: 0 10px 8px 10px;\n  max-width: 100%;\n\n  @media ${device.widerThanLaptopS} {\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n    width: 316px;\n    padding: 20px 20px 4px 20px;\n    margin: 0;\n  }\n`;\n\nconst Wrapper = styled.div`\n  ${flex({ flexDirection: 'column', alignItems: 'center' })};\n  position: relative;\n`;\n\nconst Avatar = styled.div`\n  ${flex({ alignItems: 'center', justifyContent: 'flex-start' })}\n  margin-bottom: 10px;\n  max-width: 100%;\n  min-width: fit-content;\n\n  @media ${device.widerThanLaptopS} {\n    margin-right: 0;\n    width: 100%;\n    min-height: 168px;\n  }\n\n  img {\n    width: 128px !important;\n    height: 128px !important;\n    border-radius: 50%;\n\n    @media ${device.widerThanLaptopS} {\n      width: 168px !important;\n      height: 168px !important;\n    }\n  }\n`;\n\nconst Profile = styled.div`\n  ${flex({ flexDirection: 'column' })}\n  margin-left: 16px;\n  max-width: 296px;\n  height: 138px;\n\n  @media ${device.widerThanLaptopS} {\n    width: 100%;\n    height: auto;\n    margin-left: 0;\n  }\n`;\n\nconst Author = styled.span`\n  max-width: 100%;\n  display: block;\n  font-size: 20px;\n  font-weight: 500;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  @media ${device.widerThanLaptopS} {\n    font-size: 24px;\n    padding-top: 4px;\n  }\n`;\n\nconst Description = styled.p`\n  max-width: 100%;\n  font-size: 14px;\n  word-break: break-all;\n\n  @media ${device.widerThanLaptopS} {\n    font-size: 16px;\n  }\n`;\n","import styled from 'styled-components';\n\nimport { device } from '../styles/breakpoints';\nimport { flex } from '../styles/mixins';\nimport Bio from './Bio';\n\nconst Sidebar = () => (\n  <Wrapper>\n    <Bio />\n  </Wrapper>\n);\n\nexport default Sidebar;\n\nconst Wrapper = styled.aside`\n  ${flex({ flexDirection: 'column' })};\n  position: static;\n  max-width: 100%;\n  width: 100%;\n  height: 100%;\n  max-width: 780px;\n\n  @media ${device.widerThanLaptopS} {\n    width: fit-content;\n    margin-left: 20px;\n    margin-right: auto;\n  }\n`;\n","import styled from 'styled-components';\n\nimport { device } from '../styles/breakpoints';\nimport { flex } from '../styles/mixins';\nimport Sidebar from './Sidebar';\n\ninterface Props {\n  children: JSX.Element;\n}\n\nconst SidebarProvider = ({ children }: Props) => (\n  <Wrapper>\n    <Sidebar />\n    {children}\n  </Wrapper>\n);\n\nexport default SidebarProvider;\n\nconst Wrapper = styled.div`\n  ${flex({ alignItems: 'center', justifyContent: 'center', flexDirection: 'column' })}\n  padding: 48px 0px;\n  width: 100%;\n\n  @media ${device.widerThanLaptopS} {\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: space-between;\n  }\n\n  & > ul,\n  & > div {\n    @media ${device.widerThanLaptopS} {\n      margin-right: auto;\n    }\n  }\n`;\n","import { graphql, useStaticQuery } from 'gatsby';\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterUsername\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","e","t","a","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","children","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","ae","_len","arguments","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","props","_jsx","viewBox","fill","userSelect","verticalAlign","overflow","fillRule","_ref","title","subtitle","description","url","twitterUsername","pathname","created","updated","combinedTitle","_jsxs","_Fragment","rel","href","name","content","httpEquiv","Date","toLocaleDateString","useScrollToTop","isTop","setIsTop","useState","timer","useRef","useEffect","document","documentElement","scrollTop","handleScroll","throttleHandler","cb","wait","throttle","clearTimeout","handleClickButton","ScrollToTop","Container","onClick","Arrow","styled","div","withConfig","componentId","flex","alignItems","justifyContent","theme","scrollToTopBg","_ref2","scrollToTop","_ref3","tooltipBg","_ref4","tooltip","id","xmlns","xmlnsXlink","preserveAspectRatio","shapeRendering","textRendering","imageRendering","clipRule","xmlSpace","Socials","github","twitter","instagram","linkedIn","email","resume","config","LINKS","label","icon","LinkedIn","Twitter","Github","Instagram","Email","Resume","Clip","border","bg","device","widerThanLaptopS","mute","default","Bio","author","Wrapper","Avatar","StaticImage","require","Profile","Author","Description","flexDirection","span","Sidebar","aside","useSiteMetadata","useStaticQuery","site","siteMetadata"],"sourceRoot":""}